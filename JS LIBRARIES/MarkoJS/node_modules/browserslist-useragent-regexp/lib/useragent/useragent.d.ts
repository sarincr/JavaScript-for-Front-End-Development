import { ISemverCompareOptions } from '../semver';
import { IBrowsers } from '../browsers';
import { IFixedFamily, IBrowserRegExpSource, IBrowserRegExp, IBrowserVersionRegExp } from './types';
export declare const BROWSERS_REGEXPS: IBrowserRegExp[];
/**
 * Get user agent RegExps for given browsers.
 * @param browsers - Browsers.
 * @param options - Semver compare options.
 * @returns User agent RegExps.
 */
export declare function getRegExpsForBrowsers(browsers: IBrowsers, options: ISemverCompareOptions): IBrowserVersionRegExp[];
/**
 * Fix browser family.
 * @param family - Browser family.
 * @param regExp - User agent RegExp to find browser family as fallback.
 * @returns Fixed browser families.
 */
export declare function fixBrowserFamily(family: string, regExp: RegExp): IFixedFamily[];
/**
 * Fix browser RegExp object.
 * @param browserRegExpSource - Source browser RegExp object.
 * @returns Fixed object.
 */
export declare function fixBrowserRegExp(browserRegExpSource: IBrowserRegExpSource): IBrowserRegExp[];
/**
 * Fix browser RegExp objects.
 * @param browsersRegExpSoruces - Source browser RegExp objects.
 * @returns Fixed objects.
 */
export declare function fixBrowsersRegExps(browsersRegExpSoruces: IBrowserRegExpSource[]): IBrowserRegExp[];
/**
 * Extract and Fix iOS RegExp objects.
 * @param osRegExpSources - Source OS RegExp objects.
 * @returns Fixed objects.
 */
export declare function extractIOSRegExp(osRegExpSources: IBrowserRegExpSource[]): IBrowserRegExp[];
//# sourceMappingURL=useragent.d.ts.map