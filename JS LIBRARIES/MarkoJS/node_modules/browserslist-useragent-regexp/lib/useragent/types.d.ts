import { ISemver } from '../semver/types';
export declare enum BrowserRegExpSourceProp {
    RegExp = 0,
    Family = 1,
    Major = 2,
    Minor = 3,
    Patch = 4
}
export interface IBrowserRegExpSource {
    [BrowserRegExpSourceProp.RegExp]: RegExp;
    [BrowserRegExpSourceProp.Family]: string;
    [BrowserRegExpSourceProp.Major]: number | string;
    [BrowserRegExpSourceProp.Minor]: number | string;
    [BrowserRegExpSourceProp.Patch]: number | string;
}
export interface IFixedFamily {
    family: string;
    regExp?: RegExp;
}
export interface IBrowserRegExp {
    regExp: RegExp;
    family: string;
    fixedVersion: ISemver | null;
    minVersion: ISemver | null;
    maxVersion: ISemver | null;
}
export interface IBrowserVersionRegExp {
    family: string;
    regExp: RegExp;
    requestVersions: ISemver[];
    resultFixedVersion: ISemver | null;
    resultMinVersion: ISemver | null;
    resultMaxVersion: ISemver | null;
}
export interface IBrowserVersionedRegExp extends IBrowserVersionRegExp {
    sourceRegExp: RegExp;
    sourceRegExpString: string;
    regExpString: string;
    requestVersionsStrings: string[];
}
//# sourceMappingURL=types.d.ts.map