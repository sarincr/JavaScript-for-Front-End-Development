{"version":3,"sources":["../../src/taglib/index.js"],"names":["compiler","require","clearCache","taglib","clearCaches","register","taglibProps","taglibPath","registerFromFile","_loader","loadTaglibFromFile","exports","buildLookup","excludeDir","excludePackage","loader","finder","_finder","lookup","dir","translator","Array","isArray","taglibs","registerTaglib","id"],"mappings":"AAAA;;;AAGA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,iBAAD,CAAxB;;AAEA,SAASC,UAAT,GAAsB;AACpBF,EAAAA,QAAQ,CAACG,MAAT,CAAgBC,WAAhB;AACD;;AAED,SAASC,QAAT,CAAkBC,WAAlB,EAA+BC,UAA/B,EAA2C;AACzC,SAAOP,QAAQ,CAACG,MAAT,CAAgBE,QAAhB,CAAyBE,UAAzB,EAAqCD,WAArC,CAAP;AACD;;AAED,SAASE,gBAAT,CAA0BD,UAA1B,EAAsC;AACpC,SAAOF,QAAQ;AACbL,EAAAA,QAAQ,CAACG,MAAT,CAAgBM,OAAhB,CAAwBC,kBAAxB,CAA2CH,UAA3C,CADa;AAEbA,EAAAA,UAFa,CAAf;;AAID;;AAEDI,OAAO,CAACT,UAAR,GAAqBA,UAArB;AACAS,OAAO,CAACN,QAAR,GAAmBA,QAAnB;AACAM,OAAO,CAACH,gBAAR,GAA2BA,gBAA3B;AACAG,OAAO,CAACC,WAAR,GAAsBZ,QAAQ,CAACG,MAAT,CAAgBS,WAAtC;AACAD,OAAO,CAACE,UAAR,GAAqBb,QAAQ,CAACG,MAAT,CAAgBU,UAArC;AACAF,OAAO,CAACG,cAAR,GAAyBd,QAAQ,CAACG,MAAT,CAAgBW,cAAzC;AACAH,OAAO,CAACI,MAAR,GAAiBf,QAAQ,CAACG,MAAT,CAAgBM,OAAjC;AACAE,OAAO,CAACK,MAAR,GAAiBhB,QAAQ,CAACG,MAAT,CAAgBc,OAAjC;AACAN,OAAO,CAACO,MAAR,GAAiB;AACfN,EAAAA,WAAW,EAAE,UAAUO,GAAV,EAAeC,UAAf,EAA2B;AACtC,QAAI,CAACA,UAAD,IAAe,CAACC,KAAK,CAACC,OAAN,CAAcF,UAAU,CAACG,OAAzB,CAApB,EAAuD;AACrDH,MAAAA,UAAU,GAAGnB,OAAO,CAAC,2BAAD,CAApB;AACA;;;;;;AAMD;;AAED,WAAOD,QAAQ,CAACG,MAAT,CAAgBS,WAAhB,CAA4BO,GAA5B,EAAiCC,UAAjC,CAAP;AACD,GAbc;AAcfI,EAAAA,cAAc,CAACrB,MAAD,EAAS;AACrB,QAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9BK,MAAAA,gBAAgB,CAACL,MAAD,CAAhB;AACD,KAFD,MAEO;AACLE,MAAAA,QAAQ,CAACF,MAAD,EAASA,MAAM,CAACsB,EAAhB,CAAR;AACD;AACF,GApBc,EAAjB","sourcesContent":["\"use strict\";\n\nlet complain = \"MARKO_DEBUG\" && require(\"complain\");\nconst compiler = require(\"@marko/compiler\");\n\nfunction clearCache() {\n  compiler.taglib.clearCaches();\n}\n\nfunction register(taglibProps, taglibPath) {\n  return compiler.taglib.register(taglibPath, taglibProps);\n}\n\nfunction registerFromFile(taglibPath) {\n  return register(\n    compiler.taglib._loader.loadTaglibFromFile(taglibPath),\n    taglibPath\n  );\n}\n\nexports.clearCache = clearCache;\nexports.register = register;\nexports.registerFromFile = registerFromFile;\nexports.buildLookup = compiler.taglib.buildLookup;\nexports.excludeDir = compiler.taglib.excludeDir;\nexports.excludePackage = compiler.taglib.excludePackage;\nexports.loader = compiler.taglib._loader;\nexports.finder = compiler.taglib._finder;\nexports.lookup = {\n  buildLookup: function (dir, translator) {\n    if (!translator || !Array.isArray(translator.taglibs)) {\n      translator = require(\"@marko/translator-default\");\n      // eslint-disable-next-line no-constant-condition\n      if (\"MARKO_DEBUG\") {\n        complain(\n          \"buildTaglibLookup now requires passing in a transltor as the second argument, eg `buildTaglibLookup(dir, require('@marko/translator-default'))`.\"\n        );\n      }\n    }\n\n    return compiler.taglib.buildLookup(dir, translator);\n  },\n  registerTaglib(taglib) {\n    if (typeof taglib === \"string\") {\n      registerFromFile(taglib);\n    } else {\n      register(taglib, taglib.id);\n    }\n  }\n};\n"],"file":"index.js"}