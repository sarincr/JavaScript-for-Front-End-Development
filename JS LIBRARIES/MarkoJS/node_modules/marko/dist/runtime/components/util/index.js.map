{"version":3,"sources":["../../../../src/runtime/components/util/index.js"],"names":["FLAG_WILL_RERENDER_IN_BROWSER","nextComponentIdProvider","out","prefix","global","componentIdPrefix","widgetIdPrefix","nextId","nextComponentId","attachBubblingEvent","componentDef","handlerMethodName","isOnce","extraArgs","component","eventIndex","push","id","exports","noop"],"mappings":"aAAA,IAAIA,6BAA6B,GAAG,CAApC;AACA;;AAEA,SAASC,uBAAT,CAAiCC,GAAjC,EAAsC;AACpC,MAAIC,MAAM,GAAGD,GAAG,CAACE,MAAJ,CAAWC,iBAAX,IAAgCH,GAAG,CAACE,MAAJ,CAAWE,cAA3C,IAA6D,GAA1E,CADoC,CAC2C;AAC/E,MAAIC,MAAM,GAAG,CAAb;;AAEA,SAAO,SAASC,eAAT,GAA2B;AAChC,WAAOL,MAAM,GAAGI,MAAM,EAAtB;AACD,GAFD;AAGD;;AAED,SAASE,mBAAT;AACEC,YADF;AAEEC,iBAFF;AAGEC,MAHF;AAIEC,SAJF;AAKE;AACA,MAAIF,iBAAJ,EAAuB;AACrB,QAAIE,SAAJ,EAAe;AACb,UAAIC,SAAS,GAAGJ,YAAY,GAA5B;AACA,UAAIK,UAAU,GAAGD,SAAS,IAAT,EAAjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAI,EAAEJ,YAAY,IAAZ,GAAwBV,6BAA1B,CAAJ,EAA8D;AAC5D,YAAIe,UAAU,KAAK,CAAnB,EAAsB;AACpBD,UAAAA,SAAS,GAAT,GAAiC,CAACD,SAAD,CAAjC;AACD,SAFD,MAEO;AACLC,UAAAA,SAAS,GAAT,CAA+BE,IAA/B,CAAoCH,SAApC;AACD;AACF;;AAED;AACEF,QAAAA,iBAAiB;AACjB,WADA;AAEAD,QAAAA,YAAY,CAACO,EAFb;AAGA,WAHA;AAIAL,QAAAA,MAJA;AAKA,WALA;AAMAG,QAAAA,UAPF;;AASD,KA7BD,MA6BO;AACL,aAAOJ,iBAAiB,GAAG,GAApB,GAA0BD,YAAY,CAACO,EAAvC,GAA4C,GAA5C,GAAkDL,MAAzD;AACD;AACF;AACF;;AAEDM,OAAO,IAAP,GAAqCjB,uBAArC;AACAiB,OAAO,IAAP,GAAsB,IAAtB;AACAA,OAAO,IAAP,GAAiCT,mBAAjC;AACAS,OAAO,IAAP,GAAqC,SAASC,IAAT,GAAgB,CAAE,CAAvD;AACAD,OAAO,GAAP,GAAkC,SAASC,IAAT,GAAgB,CAAE,CAApD;;AAEA","sourcesContent":["var FLAG_WILL_RERENDER_IN_BROWSER = 1;\n// var FLAG_HAS_RENDER_BODY = 2;\n\nfunction nextComponentIdProvider(out) {\n  var prefix = out.global.componentIdPrefix || out.global.widgetIdPrefix || \"s\"; // \"s\" is for server (we use \"b\" for the browser)\n  var nextId = 0;\n\n  return function nextComponentId() {\n    return prefix + nextId++;\n  };\n}\n\nfunction attachBubblingEvent(\n  componentDef,\n  handlerMethodName,\n  isOnce,\n  extraArgs\n) {\n  if (handlerMethodName) {\n    if (extraArgs) {\n      var component = componentDef.___component;\n      var eventIndex = component.___bubblingDomEventsExtraArgsCount++;\n\n      // If we are not going to be doing a rerender in the browser\n      // then we need to actually store the extra args with the UI component\n      // so that they will be serialized down to the browser.\n      // If we are rerendering in the browser then we just need to\n      // increment ___bubblingDomEventsExtraArgsCount to keep track of\n      // where the extra args will be found when the UI component is\n      // rerendered in the browser\n\n      if (!(componentDef.___flags & FLAG_WILL_RERENDER_IN_BROWSER)) {\n        if (eventIndex === 0) {\n          component.___bubblingDomEvents = [extraArgs];\n        } else {\n          component.___bubblingDomEvents.push(extraArgs);\n        }\n      }\n\n      return (\n        handlerMethodName +\n        \" \" +\n        componentDef.id +\n        \" \" +\n        isOnce +\n        \" \" +\n        eventIndex\n      );\n    } else {\n      return handlerMethodName + \" \" + componentDef.id + \" \" + isOnce;\n    }\n  }\n}\n\nexports.___nextComponentIdProvider = nextComponentIdProvider;\nexports.___isServer = true;\nexports.___attachBubblingEvent = attachBubblingEvent;\nexports.___destroyComponentForNode = function noop() {};\nexports.___destroyNodeRecursive = function noop() {};\n\n// eslint-disable-next-line no-constant-condition\nif (\"MARKO_DEBUG\") {\n  exports.___startDOMManipulationWarning = function noop() {};\n  exports.___stopDOMManipulationWarning = function noop() {};\n}\n"],"file":"index.js"}