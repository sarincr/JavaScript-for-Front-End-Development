"use strict";var eventDelegation = require("./event-delegation");
var delegateEvent = eventDelegation._Z_;
var getEventFromEl = eventDelegation.a__;

// var componentsUtil = require('./util');
// var destroyNodeRecursive = componentsUtil.___destroyNodeRecursive;
// var destroyComponentForNode = componentsUtil.___destroyComponentForNode;

function handleNodeAttach(node, componentsContext) {
  if (node.nodeType === 1) {
    var eventName = "onattach";
    var target = getEventFromEl(node, eventName);
    if (target) {
      var out = componentsContext.y_;
      var data = out.data;

      var attachTargets = data.aa_;
      if (!attachTargets) {
        attachTargets = data.aa_ = [];
        out.on("_S_", function () {
          for (var i = 0; i < attachTargets.length; i += 2) {
            var node = attachTargets[i];
            var target = attachTargets[i + 1];
            delegateEvent(node, eventName, target, {});
          }
        });
      }

      attachTargets.push(node);
      attachTargets.push(target);
    }
  }
}

function handleNodeDetach(node) {
  if (node.nodeType === 1) {
    var eventName = "ondetach";
    var target = getEventFromEl(node, eventName);
    if (target) {
      var allowDetach;

      delegateEvent(node, eventName, target, {
        preventDefault: function () {
          allowDetach = false;
        },
        detach: function () {
          var parentNode = node.parentNode;
          if (parentNode) {
            parentNode.removeChild(node);
          }
        } });


      return allowDetach;
    }
  }
}

eventDelegation.ab_ = handleNodeAttach;
eventDelegation.___ = handleNodeDetach;
//# sourceMappingURL=attach-detach.js.map