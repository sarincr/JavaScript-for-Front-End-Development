{"version":3,"sources":["../../../../src/runtime/vdom/morphdom/specialElHandlers.js"],"names":["syncBooleanAttrProp","fromEl","toEl","name","setAttribute","removeAttribute","forEachOption","el","fn","i","curChild","SpecialElHandlers","prototype","option","button","input","value","hasAttribute","textarea","newValue","firstChild","oldValue","nodeValue","placeholder","select","selected","selectedIndex","module","exports"],"mappings":"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","sourcesContent":["function syncBooleanAttrProp(fromEl, toEl, name) {\n  if (fromEl[name] !== toEl[name]) {\n    fromEl[name] = toEl[name];\n    if (fromEl[name]) {\n      fromEl.setAttribute(name, \"\");\n    } else {\n      fromEl.removeAttribute(name, \"\");\n    }\n  }\n}\n\nfunction forEachOption(el, fn, i) {\n  var curChild = el.___firstChild;\n\n  while (curChild) {\n    if (curChild.___nodeName === \"option\") {\n      fn(curChild, ++i);\n    } else {\n      i = forEachOption(curChild, fn, i);\n    }\n\n    curChild = curChild.___nextSibling;\n  }\n\n  return i;\n}\n\n// We use a JavaScript class to benefit from fast property lookup\nfunction SpecialElHandlers() {}\nSpecialElHandlers.prototype = {\n  /**\n   * Needed for IE. Apparently IE doesn't think that \"selected\" is an\n   * attribute when reading over the attributes using selectEl.attributes\n   */\n  option: function (fromEl, toEl) {\n    syncBooleanAttrProp(fromEl, toEl, \"selected\");\n  },\n  button: function (fromEl, toEl) {\n    syncBooleanAttrProp(fromEl, toEl, \"disabled\");\n  },\n  /**\n   * The \"value\" attribute is special for the <input> element since it sets\n   * the initial value. Changing the \"value\" attribute without changing the\n   * \"value\" property will have no effect since it is only used to the set the\n   * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n   */\n  input: function (fromEl, toEl) {\n    syncBooleanAttrProp(fromEl, toEl, \"checked\");\n    syncBooleanAttrProp(fromEl, toEl, \"disabled\");\n\n    if (fromEl.value != toEl.___value) {\n      fromEl.value = toEl.___value;\n    }\n\n    if (fromEl.hasAttribute(\"value\") && !toEl.___hasAttribute(\"value\")) {\n      fromEl.removeAttribute(\"value\");\n    }\n  },\n\n  textarea: function (fromEl, toEl) {\n    if (toEl.___preserveTextAreaValue) {\n      return;\n    }\n\n    var newValue = toEl.___value;\n    if (fromEl.value != newValue) {\n      fromEl.value = newValue;\n    }\n\n    var firstChild = fromEl.firstChild;\n    if (firstChild) {\n      // Needed for IE. Apparently IE sets the placeholder as the\n      // node value and vise versa. This ignores an empty update.\n      var oldValue = firstChild.nodeValue;\n\n      if (\n        oldValue == newValue ||\n        (!newValue && oldValue == fromEl.placeholder)\n      ) {\n        return;\n      }\n\n      firstChild.nodeValue = newValue;\n    }\n  },\n  select: function (fromEl, toEl) {\n    if (!toEl.___hasAttribute(\"multiple\")) {\n      var selected = 0;\n      forEachOption(\n        toEl,\n        function (option, i) {\n          if (option.___hasAttribute(\"selected\")) {\n            selected = i;\n          }\n        },\n        -1\n      );\n\n      if (fromEl.selectedIndex !== selected) {\n        fromEl.selectedIndex = selected;\n      }\n    }\n  }\n};\n\nmodule.exports = new SpecialElHandlers();\n"],"file":"specialElHandlers.js"}