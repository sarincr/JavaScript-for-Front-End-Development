{"version":3,"sources":["../../../../src/runtime/vdom/morphdom/helpers.js"],"names":["insertBefore","node","referenceNode","parentNode","insertInto","startNode","insertAfter","nextSibling","next","fragment","firstChild","removeChild","remove","exports"],"mappings":"aAAA,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,aAA5B,EAA2CC,UAA3C,EAAuD;AACrD,MAAIF,IAAI,CAACG,UAAT,EAAqB;AACnB,WAAOH,IAAI,CAACG,UAAL,CAAgBD,UAAhB,EAA4BD,aAA5B,CAAP;AACD;AACD,SAAOC,UAAU,CAACH,YAAX;AACLC,EAAAA,IADK;AAEJC,EAAAA,aAAa,IAAIA,aAAa,CAACG,SAAhC,IAA8CH,aAFzC,CAAP;;AAID;;AAED,SAASI,WAAT,CAAqBL,IAArB,EAA2BC,aAA3B,EAA0CC,UAA1C,EAAsD;AACpD,SAAOH,YAAY;AACjBC,EAAAA,IADiB;AAEjBC,EAAAA,aAAa,IAAIA,aAAa,CAACK,WAFd;AAGjBJ,EAAAA,UAHiB,CAAnB;;AAKD;;AAED,SAASI,WAAT,CAAqBN,IAArB,EAA2B;AACzB,MAAIO,IAAI,GAAGP,IAAI,CAACM,WAAhB;AACA,MAAIE,QAAQ,GAAGD,IAAI,IAAIA,IAAI,CAACC,QAA5B;AACA,MAAIA,QAAJ,EAAc;AACZ,WAAOD,IAAI,KAAKC,QAAQ,CAACJ,SAAlB,GAA8BI,QAA9B,GAAyC,IAAhD;AACD;AACD,SAAOD,IAAP;AACD;;AAED,SAASE,UAAT,CAAoBT,IAApB,EAA0B;AACxB,MAAIO,IAAI,GAAGP,IAAI,CAACS,UAAhB;AACA,SAAQF,IAAI,IAAIA,IAAI,CAACC,QAAd,IAA2BD,IAAlC;AACD;;AAED,SAASG,WAAT,CAAqBV,IAArB,EAA2B;AACzB,MAAIA,IAAI,CAACW,MAAT,EAAiBX,IAAI,CAACW,MAAL,GAAjB;AACKX,EAAAA,IAAI,CAACE,UAAL,CAAgBQ,WAAhB,CAA4BV,IAA5B;AACN;;AAEDY,OAAO,IAAP,GAA0Bb,YAA1B;AACAa,OAAO,IAAP,GAAyBP,WAAzB;AACAO,OAAO,IAAP,GAAyBN,WAAzB;AACAM,OAAO,IAAP,GAAwBH,UAAxB;AACAG,OAAO,IAAP,GAAyBF,WAAzB","sourcesContent":["function insertBefore(node, referenceNode, parentNode) {\n  if (node.insertInto) {\n    return node.insertInto(parentNode, referenceNode);\n  }\n  return parentNode.insertBefore(\n    node,\n    (referenceNode && referenceNode.startNode) || referenceNode\n  );\n}\n\nfunction insertAfter(node, referenceNode, parentNode) {\n  return insertBefore(\n    node,\n    referenceNode && referenceNode.nextSibling,\n    parentNode\n  );\n}\n\nfunction nextSibling(node) {\n  var next = node.nextSibling;\n  var fragment = next && next.fragment;\n  if (fragment) {\n    return next === fragment.startNode ? fragment : null;\n  }\n  return next;\n}\n\nfunction firstChild(node) {\n  var next = node.firstChild;\n  return (next && next.fragment) || next;\n}\n\nfunction removeChild(node) {\n  if (node.remove) node.remove();\n  else node.parentNode.removeChild(node);\n}\n\nexports.___insertBefore = insertBefore;\nexports.___insertAfter = insertAfter;\nexports.___nextSibling = nextSibling;\nexports.___firstChild = firstChild;\nexports.___removeChild = removeChild;\n"],"file":"helpers.js"}