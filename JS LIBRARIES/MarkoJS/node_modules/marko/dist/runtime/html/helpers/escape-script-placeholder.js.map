{"version":3,"sources":["../../../../src/runtime/html/helpers/escape-script-placeholder.js"],"names":["escapeEndingScriptTagRegExp","module","exports","escapeScriptHelper","val","replace"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,2BAA2B,GAAG,YAAlC;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,kBAAT,CAA4BC,GAA5B,EAAiC;AAChD,SAAO,OAAOA,GAAP,KAAe,QAAf;AACHA,EAAAA,GAAG,CAACC,OAAJ,CAAYL,2BAAZ,EAAyC,gBAAzC,CADG;AAEHI,EAAAA,GAAG,GAAG,EAFV;AAGD,CAJD","sourcesContent":["\"use strict\";\n\n/**\n * Escapes the '</' sequence in the body of a <script> body to avoid the `<script>` being\n * ended prematurely.\n *\n * For example:\n * var evil = {\n * \tname:  '</script><script>alert(1)</script>'\n * };\n *\n * <script>var foo = ${JSON.stringify(evil)}</script>\n *\n * Without escaping the ending '</script>' sequence the opening <script> tag would be\n * prematurely ended and a new script tag could then be started that could then execute\n * arbitrary code.\n */\nvar escapeEndingScriptTagRegExp = /<\\/script/g;\nmodule.exports = function escapeScriptHelper(val) {\n  return typeof val === \"string\"\n    ? val.replace(escapeEndingScriptTagRegExp, \"\\\\u003C/script\")\n    : val + \"\";\n};\n"],"file":"escape-script-placeholder.js"}