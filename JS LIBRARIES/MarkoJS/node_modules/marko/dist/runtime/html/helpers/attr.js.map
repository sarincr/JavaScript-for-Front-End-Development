{"version":3,"sources":["../../../../src/runtime/html/helpers/attr.js"],"names":["escapeQuoteHelpers","require","escapeDoubleQuotes","escapeSingleQuotes","module","exports","maybeEmptyAttr","notEmptyAttr","isEmpty","name","value","guessQuotes","RegExp","doubleQuote","source","startPos","singleQuote","i","len","length"],"mappings":"AAAA;;AAEA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,iBAAD,CAAhC;AACA,IAAIC,kBAAkB,GAAGF,kBAAkB,IAA3C;AACA,IAAIG,kBAAkB,GAAGH,kBAAkB,IAA3C;;AAEAI,MAAM,CAACC,OAAP,GAAiBC,cAAjB;;AAEAA,cAAc,IAAd,GAAiCC,YAAjC;AACAD,cAAc,IAAd,GAAqCE,OAArC;;AAEA,SAASF,cAAT,CAAwBG,IAAxB,EAA8BC,KAA9B,EAAqC;AACnC,MAAIF,OAAO,CAACE,KAAD,CAAX,EAAoB;AAClB,WAAO,EAAP;AACD;;AAED,SAAOH,YAAY,CAACE,IAAD,EAAOC,KAAP,CAAnB;AACD;;AAED,SAASH,YAAT,CAAsBE,IAAtB,EAA4BC,KAA5B,EAAmC;AACjC,UAAQ,OAAOA,KAAf;AACE,SAAK,QAAL;AACE,aAAO,MAAMD,IAAN,GAAaE,WAAW,CAACD,KAAD,CAA/B;AACF,SAAK,SAAL;AACE,aAAO,MAAMD,IAAb;AACF,SAAK,QAAL;AACE,aAAO,MAAMA,IAAN,GAAa,GAAb,GAAmBC,KAA1B;AACF,SAAK,QAAL;AACE,UAAIA,KAAK,YAAYE,MAArB,EAA6B;AAC3B,eAAO,MAAMH,IAAN,GAAaI,WAAW,CAACH,KAAK,CAACI,MAAP,CAA/B;AACD,OAVL;;;AAaA,SAAO,MAAML,IAAN,GAAaE,WAAW,CAACD,KAAK,GAAG,EAAT,CAA/B;AACD;;AAED,SAASF,OAAT,CAAiBE,KAAjB,EAAwB;AACtB,SAAOA,KAAK,IAAI,IAAT,IAAiBA,KAAK,KAAK,KAAlC;AACD;;AAED,SAASG,WAAT,CAAqBH,KAArB,EAA4BK,QAA5B,EAAsC;AACpC,SAAO,OAAOb,kBAAkB,CAACQ,KAAD,EAAQK,QAAR,CAAzB,GAA6C,GAApD;AACD;;AAED,SAASC,WAAT,CAAqBN,KAArB,EAA4BK,QAA5B,EAAsC;AACpC,SAAO,OAAOZ,kBAAkB,CAACO,KAAD,EAAQK,QAAR,CAAzB,GAA6C,GAApD;AACD;;AAED,SAASJ,WAAT,CAAqBD,KAArB,EAA4B;AAC1B,OAAK,IAAIO,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGR,KAAK,CAACS,MAA5B,EAAoCF,CAAC,GAAGC,GAAxC,EAA6CD,CAAC,EAA9C,EAAkD;AAChD,YAAQP,KAAK,CAACO,CAAD,CAAb;AACE,WAAK,GAAL;AACE,eAAOD,WAAW,CAACN,KAAD,EAAQO,CAAC,GAAG,CAAZ,CAAlB;AACF,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,GAAL;AACA,WAAK,IAAL;AACA,WAAK,IAAL;AACA,WAAK,IAAL;AACA,WAAK,IAAL;AACE,eAAOJ,WAAW,CAACH,KAAD,EAAQO,CAAC,GAAG,CAAZ,CAAlB,CAVJ;;AAYD;;AAED,SAAOP,KAAK,IAAI,OAAOA,KAAK,CAACQ,GAAG,GAAG,CAAP,CAAL,KAAmB,GAAnB,GAAyBR,KAAK,GAAG,GAAjC,GAAuCA,KAA9C,CAAhB;AACD","sourcesContent":["\"use strict\";\n\nvar escapeQuoteHelpers = require(\"./escape-quotes\");\nvar escapeDoubleQuotes = escapeQuoteHelpers.___escapeDoubleQuotes;\nvar escapeSingleQuotes = escapeQuoteHelpers.___escapeSingleQuotes;\n\nmodule.exports = maybeEmptyAttr;\n\nmaybeEmptyAttr.___notEmptyAttr = notEmptyAttr;\nmaybeEmptyAttr.___isEmptyAttrValue = isEmpty;\n\nfunction maybeEmptyAttr(name, value) {\n  if (isEmpty(value)) {\n    return \"\";\n  }\n\n  return notEmptyAttr(name, value);\n}\n\nfunction notEmptyAttr(name, value) {\n  switch (typeof value) {\n    case \"string\":\n      return \" \" + name + guessQuotes(value);\n    case \"boolean\":\n      return \" \" + name;\n    case \"number\":\n      return \" \" + name + \"=\" + value;\n    case \"object\":\n      if (value instanceof RegExp) {\n        return \" \" + name + doubleQuote(value.source);\n      }\n  }\n\n  return \" \" + name + guessQuotes(value + \"\");\n}\n\nfunction isEmpty(value) {\n  return value == null || value === false;\n}\n\nfunction doubleQuote(value, startPos) {\n  return '=\"' + escapeDoubleQuotes(value, startPos) + '\"';\n}\n\nfunction singleQuote(value, startPos) {\n  return \"='\" + escapeSingleQuotes(value, startPos) + \"'\";\n}\n\nfunction guessQuotes(value) {\n  for (var i = 0, len = value.length; i < len; i++) {\n    switch (value[i]) {\n      case '\"':\n        return singleQuote(value, i + 1);\n      case \"'\":\n      case \">\":\n      case \" \":\n      case \"\\t\":\n      case \"\\n\":\n      case \"\\r\":\n      case \"\\f\":\n        return doubleQuote(value, i + 1);\n    }\n  }\n\n  return value && \"=\" + (value[len - 1] === \"/\" ? value + \" \" : value);\n}\n"],"file":"attr.js"}