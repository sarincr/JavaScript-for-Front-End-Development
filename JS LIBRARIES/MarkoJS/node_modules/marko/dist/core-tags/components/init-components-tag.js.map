{"version":3,"sources":["../../../src/core-tags/components/init-components-tag.js"],"names":["INIT_COMPONENTS_KEY","Symbol","addComponentsFromContext","require","getInitComponentsCode","addComponentsFromOut","source","target","sourceOut","out","targetOut","componentsContext","componentDefs","writer","get","addInitScript","state","root","script","module","exports","render","input","$global","global","undefined","on","isSync","asyncOut","beginAsync","last","timeout","onLast","next","rootOut","_parentOut","end"],"mappings":"AAAA;;AAEA,MAAMA,mBAAmB,GAAGC,MAAM,EAAlC;;AAEA,MAAMC,wBAAwB;AAC5BC,OAAO,CAAC,0BAAD,CAAP,GADF;AAEA,MAAMC,qBAAqB;AACzBD,OAAO,CAAC,0BAAD,CAAP,GADF;;AAGA,SAASE,oBAAT,CAA8BC,MAA9B,EAAsCC,MAAtC,EAA8C;AAC5C,QAAMC,SAAS,GAAGF,MAAM,CAACG,GAAP,IAAcH,MAAhC;AACA,QAAMI,SAAS,GAAGH,MAAM,IAAIC,SAA5B;AACA,QAAMG,iBAAiB,GAAGH,SAAS,GAAnC;AACA,QAAMI,aAAa,GAAGF,SAAS,CAACG,MAAV,CAAiBC,GAAjB,CAAqB,eAArB,CAAtB;AACAZ,EAAAA,wBAAwB,CAACS,iBAAD,EAAoBC,aAApB,CAAxB;AACD;;AAED,SAASG,aAAT,CAAuBF,MAAvB,EAA+B;AAC7B,QAAMJ,GAAG,GAAGI,MAAM,CAACG,KAAP,CAAaC,IAAzB;AACA,QAAML,aAAa,GAAGC,MAAM,CAACC,GAAP,CAAW,eAAX,CAAtB;AACAD,EAAAA,MAAM,CAACK,MAAP,CAAcd,qBAAqB,CAACK,GAAD,EAAMG,aAAN,CAAnC;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,KAAhB,EAAuBb,GAAvB,EAA4B;AAC3C,QAAMc,OAAO,GAAGd,GAAG,CAACe,MAApB;AACA,MAAID,OAAO,CAACvB,mBAAD,CAAP,KAAiCyB,SAArC,EAAgD;AAC9CF,IAAAA,OAAO,CAACvB,mBAAD,CAAP,GAA+B,IAA/B;;AAEAS,IAAAA,GAAG,CAACiB,EAAJ,CAAO,cAAP,EAAuBrB,oBAAvB;AACAI,IAAAA,GAAG,CAACiB,EAAJ,OAAsBX,aAAtB;;AAEA,QAAIN,GAAG,CAACkB,MAAJ,OAAiB,IAArB,EAA2B;AACzB;AACA;AACAtB,MAAAA,oBAAoB,CAACI,GAAD,CAApB;AACD,KAJD,MAIO;AACL;AACA;AACA;AACA,YAAMmB,QAAQ,GAAGnB,GAAG,CAACoB,UAAJ,CAAe,EAAEC,IAAI,EAAE,IAAR,EAAcC,OAAO,EAAE,CAAC,CAAxB,EAAf,CAAjB;AACAtB,MAAAA,GAAG,CAACuB,MAAJ,CAAW,UAAUC,IAAV,EAAgB;AACzB;AACA,YAAIC,OAAO,GAAGzB,GAAd;AACA,eAAOyB,OAAO,CAACC,UAAf,EAA2B;AACzBD,UAAAA,OAAO,GAAGA,OAAO,CAACC,UAAlB;AACD;AACD;AACA9B,QAAAA,oBAAoB,CAAC6B,OAAD,EAAUN,QAAV,CAApB;AACAA,QAAAA,QAAQ,CAACQ,GAAT;AACAH,QAAAA,IAAI;AACL,OAVD;AAWD;AACF;AACF,CA9BD","sourcesContent":["\"use strict\";\n\nconst INIT_COMPONENTS_KEY = Symbol();\n\nconst addComponentsFromContext =\n  require(\"../../runtime/components\").___addComponentsFromContext;\nconst getInitComponentsCode =\n  require(\"../../runtime/components\").___getInitComponentsCode;\n\nfunction addComponentsFromOut(source, target) {\n  const sourceOut = source.out || source;\n  const targetOut = target || sourceOut;\n  const componentsContext = sourceOut.___components;\n  const componentDefs = targetOut.writer.get(\"componentDefs\");\n  addComponentsFromContext(componentsContext, componentDefs);\n}\n\nfunction addInitScript(writer) {\n  const out = writer.state.root;\n  const componentDefs = writer.get(\"componentDefs\");\n  writer.script(getInitComponentsCode(out, componentDefs));\n}\n\nmodule.exports = function render(input, out) {\n  const $global = out.global;\n  if ($global[INIT_COMPONENTS_KEY] === undefined) {\n    $global[INIT_COMPONENTS_KEY] = true;\n\n    out.on(\"await:finish\", addComponentsFromOut);\n    out.on(\"___toString\", addInitScript);\n\n    if (out.isSync() === true) {\n      // Generate initialization code for any of the UI components that were\n      // rendered synchronously\n      addComponentsFromOut(out);\n    } else {\n      // Generate initialization code for any of the UI components that were\n      // rendered asynchronously, but were outside an `<await>` tag\n      // (each `<await>` tag will have its own component initialization block)\n      const asyncOut = out.beginAsync({ last: true, timeout: -1 });\n      out.onLast(function (next) {\n        // Ensure we're getting init code starting from the root\n        let rootOut = out;\n        while (rootOut._parentOut) {\n          rootOut = rootOut._parentOut;\n        }\n        // Write out all of the component init code from the main out\n        addComponentsFromOut(rootOut, asyncOut);\n        asyncOut.end();\n        next();\n      });\n    }\n  }\n};\n"],"file":"init-components-tag.js"}