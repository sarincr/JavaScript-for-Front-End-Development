{"version":3,"sources":["../../src/node-require/hot-reload.js"],"names":["fs","require","path","compiler","exports","handleFileModified","filename","existsSync","console","log","clearCaches","cwdRelative","extname","cache","tryReload","e","error","relative","process","cwd"],"mappings":"cAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,aAAD,CAAxB;AACAA,OAAO,CAAC,4BAAD,CAAP;;AAEAG,OAAO,CAACC,kBAAR,GAA6B,UAAUC,QAAV,EAAoB;AAC/C,MAAI,CAACN,EAAE,CAACO,UAAH,CAAcD,QAAd,CAAL,EAA8B;AAC5BE,IAAAA,OAAO,CAACC,GAAR;AACE,+DADF;AAEEH,IAAAA,QAFF;;AAIA;AACD;;AAEDH,EAAAA,QAAQ,CAACO,WAAT;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAa,0BAAyBE,WAAW,CAACL,QAAD,CAAW,EAA5D;;AAEA,MAAIJ,IAAI,CAACU,OAAL,CAAaN,QAAb,MAA2B,OAA/B,EAAwC;AACtC;AACA;AACA,SAAK,MAAMA,QAAX,IAAuBL,OAAO,CAACY,KAA/B,EAAsC;AACpC,UAAIX,IAAI,CAACU,OAAL,CAAaN,QAAb,MAA2B,QAA/B,EAAyC;AACvCQ,QAAAA,SAAS,CAACR,QAAD,CAAT;AACD;AACF;AACF,GARD,MAQO;AACLQ,IAAAA,SAAS,CAACR,QAAD,CAAT;AACD;AACF,CAvBD;;AAyBA,SAASQ,SAAT,CAAmBR,QAAnB,EAA6B;AAC3B,MAAI;AACF,WAAOL,OAAO,CAACY,KAAR,CAAcP,QAAd,CAAP;AACAL,IAAAA,OAAO,CAACK,QAAD,CAAP;AACAE,IAAAA,OAAO,CAACC,GAAR;AACG,+CAA0CE,WAAW,CAACL,QAAD,CAAW,EADnE;;AAGD,GAND,CAME,OAAOS,CAAP,EAAU;AACVP,IAAAA,OAAO,CAACQ,KAAR,CAAcD,CAAd;AACD;AACF;;AAED,SAASJ,WAAT,CAAqBL,QAArB,EAA+B;AAC7B,SAAOJ,IAAI,CAACe,QAAL,CAAcC,OAAO,CAACC,GAAR,EAAd,EAA6Bb,QAA7B,CAAP;AACD","sourcesContent":["/* eslint-disable no-console */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst compiler = require(\"../compiler\");\nrequire(\"../runtime/html/hot-reload\");\n\nexports.handleFileModified = function (filename) {\n  if (!fs.existsSync(filename)) {\n    console.log(\n      \"[marko/hot-reload] WARNING cannot resolve template path: \",\n      filename\n    );\n    return;\n  }\n\n  compiler.clearCaches();\n  console.log(`[marko] File modified: ${cwdRelative(filename)}`);\n\n  if (path.extname(filename) === \".json\") {\n    // If we taglib was modified then uncache *all* templates so that they will\n    // all be reloaded\n    for (const filename in require.cache) {\n      if (path.extname(filename) === \".marko\") {\n        tryReload(filename);\n      }\n    }\n  } else {\n    tryReload(filename);\n  }\n};\n\nfunction tryReload(filename) {\n  try {\n    delete require.cache[filename];\n    require(filename);\n    console.log(\n      `[marko] Template successfully reloaded: ${cwdRelative(filename)}`\n    );\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction cwdRelative(filename) {\n  return path.relative(process.cwd(), filename);\n}\n"],"file":"hot-reload.js"}