{"version":3,"sources":["../../src/util/optimize-html-writes.js"],"names":["mergeWriteCallsVisitor","ExpressionStatement","path","curPath","quasis","expressions","removals","content","getOutContent","push","getNextSibling","forEach","removal","remove","length","get","replaceWith","optimizeHTMLWrites","hub","file","markoOpts","optimize","output","traverse","isExpressionStatement","isCallExpression","isMemberExpression","node"],"mappings":"uFAAA;;AAEA,MAAMA,sBAAsB,GAAG;AAC7BC,EAAAA,mBAAmB,CAACC,IAAD,EAAO;AACxB,QAAIC,OAAO,GAAGD,IAAd;AACA,UAAME,MAAM,GAAG,CAAC,EAAD,CAAf;AACA,UAAMC,WAAW,GAAG,EAApB;AACA,UAAMC,QAAQ,GAAG,EAAjB;;AAEA,OAAG;AACD,YAAMC,OAAO,GAAGC,aAAa,CAACL,OAAD,CAA7B;AACA,UAAI,CAACI,OAAL,EAAc;AACd,UAAIJ,OAAO,KAAKD,IAAhB,EAAsBI,QAAQ,CAACG,IAAT,CAAcN,OAAd;AACtBC,MAAAA,MAAM,CAACK,IAAP,CAAY,EAAZ;AACAJ,MAAAA,WAAW,CAACI,IAAZ,CAAiBF,OAAjB;AACD,KAND,QAMUJ,OAAO,GAAGA,OAAO,CAACO,cAAR,EANpB;;AAQAJ,IAAAA,QAAQ,CAACK,OAAT,CAAiB,CAAAC,OAAO,KAAIA,OAAO,CAACC,MAAR,EAA5B;;AAEA,QAAIR,WAAW,CAACS,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BZ,MAAAA,IAAI;AACDa,MAAAA,GADH,CACO,wBADP;AAEGC,MAAAA,WAFH,CAEe,yCAAwBZ,MAAxB,EAAgC,GAAGC,WAAnC,CAFf;AAGD;AACF,GAtB4B,EAA/B;;;AAyBO,SAASY,kBAAT,CAA4Bf,IAA5B,EAAkC;AACvC,QAAM;AACJgB,IAAAA,GAAG,EAAE;AACHC,MAAAA,IAAI,EAAE,EAAEC,SAAF,EADH,EADD;;AAIFlB,EAAAA,IAJJ;;AAMA,MAAIkB,SAAS,CAACC,QAAV,IAAsBD,SAAS,CAACE,MAAV,KAAqB,MAA/C,EAAuD;AACrDpB,IAAAA,IAAI,CAACqB,QAAL,CAAcvB,sBAAd;AACD;AACF;;AAED,SAASQ,aAAT,CAAuBN,IAAvB,EAA6B;AAC3B,MAAIA,IAAI,CAACsB,qBAAL,EAAJ,EAAkC;AAChC,WAAOhB,aAAa,CAACN,IAAI,CAACa,GAAL,CAAS,YAAT,CAAD,CAApB;AACD;;AAED;AACEb,IAAAA,IAAI,CAACuB,gBAAL;AACAvB,IAAAA,IAAI,CAACa,GAAL,CAAS,QAAT,EAAmBW,kBAAnB,EADA;AAEAxB,IAAAA,IAAI,CAACa,GAAL,CAAS,oBAAT,EAA+BY,IAA/B,KAAwC,KAFxC;AAGAzB,IAAAA,IAAI,CAACa,GAAL,CAAS,sBAAT,EAAiCY,IAAjC,KAA0C,GAH1C;AAIAzB,IAAAA,IAAI,CAACa,GAAL,CAAS,aAAT,EAAwBY,IAL1B;;AAOD","sourcesContent":["import { normalizeTemplateString } from \"@marko/babel-utils\";\n\nconst mergeWriteCallsVisitor = {\n  ExpressionStatement(path) {\n    let curPath = path;\n    const quasis = [\"\"];\n    const expressions = [];\n    const removals = [];\n\n    do {\n      const content = getOutContent(curPath);\n      if (!content) break;\n      if (curPath !== path) removals.push(curPath);\n      quasis.push(\"\");\n      expressions.push(content);\n    } while ((curPath = curPath.getNextSibling()));\n\n    removals.forEach(removal => removal.remove());\n\n    if (expressions.length > 1) {\n      path\n        .get(\"expression.arguments.0\")\n        .replaceWith(normalizeTemplateString(quasis, ...expressions));\n    }\n  }\n};\n\nexport function optimizeHTMLWrites(path) {\n  const {\n    hub: {\n      file: { markoOpts }\n    }\n  } = path;\n\n  if (markoOpts.optimize && markoOpts.output === \"html\") {\n    path.traverse(mergeWriteCallsVisitor);\n  }\n}\n\nfunction getOutContent(path) {\n  if (path.isExpressionStatement()) {\n    return getOutContent(path.get(\"expression\"));\n  }\n\n  return (\n    path.isCallExpression() &&\n    path.get(\"callee\").isMemberExpression() &&\n    path.get(\"callee.object.name\").node === \"out\" &&\n    path.get(\"callee.property.name\").node === \"w\" &&\n    path.get(\"arguments.0\").node\n  );\n}\n"],"file":"optimize-html-writes.js"}