{"version":3,"sources":["../../src/util/key-manager.js"],"names":["KeyManagerLookup","WeakMap","getKeyManager","path","hub","get","set","KeyManager","hasAutoKey","key","node","Boolean","_isAutoKey","hasUserKey","_hasUserKey","constructor","_nextKey","nextKey","Object","assign","t","stringLiteral","String","resolveKey","firstChildTag","find","child","isMarkoTag","firstChildKey","getUserKey","keyValueIdentifier","scope","generateUidIdentifier","insertBefore","variableDeclaration","variableDeclarator","crawl","parentKeyScope","getParentKeyScope","autoKey","binaryExpression","parentLoopTag","findParent","isLoopTag","getKeyScope","existingKeyScope","keyScopeIdentifier","firstChildKeyValue","valuePath","getOwnBinding","name","declarationPath","parentPath","pushContainer","keyValue","attributes","some","attr","body","params","numericLiteral","updateExpression","unshiftContainer","undefined","keyAttr","remove"],"mappings":"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","sourcesContent":["import { types as t } from \"@marko/compiler\";\nimport {\n  normalizeTemplateString,\n  isTransparentTag,\n  isLoopTag\n} from \"@marko/babel-utils\";\nconst KeyManagerLookup = new WeakMap();\n\n/**\n * @returns {KeyManager}\n */\nexport function getKeyManager(path) {\n  const { hub } = path;\n  return (\n    KeyManagerLookup.get(hub) ||\n    KeyManagerLookup.set(hub, new KeyManager()).get(hub)\n  );\n}\n\nexport function hasAutoKey(path) {\n  const key = path.get(\"key\").node;\n  return Boolean(key && key._isAutoKey);\n}\n\nexport function hasUserKey(path) {\n  return path.node._hasUserKey;\n}\n\nclass KeyManager {\n  constructor() {\n    this._nextKey = 0;\n  }\n\n  nextKey() {\n    return Object.assign(t.stringLiteral(String(this._nextKey++)), {\n      _isAutoKey: true\n    });\n  }\n\n  resolveKey(path) {\n    if (isLoopTag(path)) {\n      // Record the first child key if found under a loop.\n      const firstChildTag = path\n        .get(\"body.body\")\n        .find(child => child.isMarkoTag());\n      const firstChildKey = firstChildTag && getUserKey(firstChildTag);\n\n      if (firstChildKey) {\n        const keyValueIdentifier = path.scope.generateUidIdentifier(\"keyValue\");\n        firstChildTag.set(\"key\", keyValueIdentifier);\n        firstChildTag.insertBefore(\n          t.variableDeclaration(\"const\", [\n            t.variableDeclarator(keyValueIdentifier, firstChildKey)\n          ])\n        );\n\n        path.set(\"keyValue\", keyValueIdentifier);\n        path.get(\"body\").scope.crawl();\n      }\n      return;\n    }\n\n    if (isTransparentTag(path)) {\n      return;\n    }\n\n    if (getUserKey(path)) {\n      return;\n    }\n\n    const parentKeyScope = getParentKeyScope(path);\n    const autoKey = path.get(\"key\").node || this.nextKey();\n    path.set(\n      \"key\",\n      parentKeyScope\n        ? t.binaryExpression(\"+\", autoKey, parentKeyScope)\n        : autoKey\n    );\n  }\n}\n\nfunction getParentKeyScope(path) {\n  const parentLoopTag = path.findParent(isLoopTag);\n  return parentLoopTag && getKeyScope(parentLoopTag);\n}\n\nfunction getKeyScope(path) {\n  const existingKeyScope = path.get(\"keyScope\").node;\n  if (existingKeyScope) {\n    return existingKeyScope;\n  }\n\n  const keyScopeIdentifier = path.scope.generateUidIdentifier(\"keyScope\");\n  const firstChildKeyValue = path.get(\"keyValue\").node;\n\n  if (firstChildKeyValue) {\n    const valuePath = path\n      .get(\"body\")\n      .scope.getOwnBinding(firstChildKeyValue.name).path;\n    const declarationPath = valuePath.parentPath;\n    declarationPath.pushContainer(\n      \"declarations\",\n      t.variableDeclarator(\n        keyScopeIdentifier,\n        normalizeTemplateString`[${firstChildKeyValue}]`\n      )\n    );\n  } else {\n    let keyValue;\n\n    if (path.get(\"name.value\").node === \"for\") {\n      if (path.node.attributes.some(attr => attr.name === \"of\")) {\n        keyValue = path.node.body.params[1];\n      } else {\n        keyValue = path.node.body.params[0];\n      }\n    }\n\n    if (!keyValue) {\n      const keyValueIdentifier = path.scope.generateUidIdentifier(\"keyValue\");\n      path.insertBefore(\n        t.variableDeclaration(\"let\", [\n          t.variableDeclarator(keyValueIdentifier, t.numericLiteral(0))\n        ])\n      );\n\n      keyValue = t.updateExpression(\"++\", keyValueIdentifier);\n    }\n\n    const parentKeyScope = getParentKeyScope(path);\n    if (parentKeyScope) {\n      keyValue = t.binaryExpression(\"+\", keyValue, parentKeyScope);\n    }\n\n    path\n      .get(\"body\")\n      .unshiftContainer(\n        \"body\",\n        t.variableDeclaration(\"const\", [\n          t.variableDeclarator(\n            keyScopeIdentifier,\n            normalizeTemplateString`[${keyValue}]`\n          )\n        ])\n      );\n  }\n\n  path.set(\"keyScope\", keyScopeIdentifier);\n  return keyScopeIdentifier;\n}\n\nfunction getUserKey(path) {\n  if (hasAutoKey(path)) {\n    return undefined;\n  }\n\n  let key = path.get(\"key\").node;\n  if (key === undefined) {\n    const keyAttr = path\n      .get(\"attributes\")\n      .find(attr => attr.get(\"name\").node === \"key\");\n\n    if (keyAttr) {\n      key = normalizeTemplateString`@${keyAttr.get(\"value\").node}`;\n      path.node._hasUserKey = true;\n      keyAttr.remove();\n    } else {\n      key = null;\n    }\n\n    path.set(\"key\", key);\n  }\n\n  return key;\n}\n"],"file":"key-manager.js"}