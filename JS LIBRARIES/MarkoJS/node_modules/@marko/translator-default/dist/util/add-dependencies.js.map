{"version":3,"sources":["../../src/util/add-dependencies.js"],"names":["entryFile","isHydrate","modules","resolveVirtualDependency","hydrateIncludeImports","markoOpts","hydratedFiles","Set","program","path","shouldIncludeImport","toTestFn","addBrowserDeps","registerId","t","identifier","watchFiles","hasComponents","splitComponentIndex","set","skip","addHydrateDeps","metadata","marko","Array","from","initId","markoComponentsImport","importPath","resolvePath","specifiers","push","importSpecifier","unshiftContainer","pushContainer","expressionStatement","callExpression","runtimeId","stringLiteral","file","meta","resolved","opts","filename","has","add","component","basename","watchFile","imported","imports","tag","tags","endsWith","splitComponentId","splitComponentImport","importDefaultSpecifier","id","sourceMaps","s","dep","deps","virtualPath","code","map","startPos","undefined","MagicString","source","snip","endPos","generateMap","includeContent","style","toUrl","startsWith","req","join","importDeclaration","val","test","bind"],"mappings":"qJAAA;AACA;AACA;AACA,gD;;AAEe,CAACA,SAAD,EAAYC,SAAZ,KAA0B;AACvC,QAAM,EAAEC,OAAF,EAAWC,wBAAX,EAAqCC,qBAArC;AACJJ,EAAAA,SAAS,CAACK,SADZ;AAEA,QAAMC,aAAa,GAAG,IAAIC,GAAJ,EAAtB;AACA,QAAMC,OAAO,GAAGR,SAAS,CAACS,IAA1B;AACA,QAAMC,mBAAmB,GAAGC,QAAQ,CAACP,qBAAD,CAApC;;AAEA,MAAI,CAACH,SAAL,EAAgB;AACdW,IAAAA,cAAc,CAACZ,SAAD,CAAd;AACA;AACD;;AAED,QAAMa,UAAU,GAAGC,gBAAEC,UAAF,CAAa,UAAb,CAAnB;AACA,QAAMC,UAAU,GAAG,IAAIT,GAAJ,EAAnB;AACA,MAAIU,aAAa,GAAG,KAApB;AACA,MAAIC,mBAAmB,GAAG,CAA1B;AACAV,EAAAA,OAAO,CAACW,GAAR,CAAY,MAAZ,EAAoB,EAApB;AACAX,EAAAA,OAAO,CAACY,IAAR;;AAEAC,EAAAA,cAAc,CAACrB,SAAD,CAAd;AACAA,EAAAA,SAAS,CAACsB,QAAV,CAAmBC,KAAnB,CAAyBP,UAAzB,GAAsCQ,KAAK,CAACC,IAAN,CAAWT,UAAX,CAAtC;;AAEA,MAAIC,aAAJ,EAAmB;AACjB,UAAMS,MAAM,GAAGZ,gBAAEC,UAAF,CAAa,MAAb,CAAf;AACA,UAAMY,qBAAqB,GAAGC,UAAU;AACtCC,IAAAA,WAAW,CAAC7B,SAAD,EAAY,8BAAZ,CAD2B,CAAxC;;AAGA,QAAIkB,mBAAJ,EAAyB;AACvBS,MAAAA,qBAAqB,CAACG,UAAtB,CAAiCC,IAAjC;AACEjB,sBAAEkB,eAAF,CAAkBnB,UAAlB,EAA8BA,UAA9B,CADF;;AAGD;AACDc,IAAAA,qBAAqB,CAACG,UAAtB,CAAiCC,IAAjC,CAAsCjB,gBAAEkB,eAAF,CAAkBN,MAAlB,EAA0BA,MAA1B,CAAtC;AACAlB,IAAAA,OAAO,CAACyB,gBAAR,CAAyB,MAAzB,EAAiCN,qBAAjC;AACAnB,IAAAA,OAAO,CAAC0B,aAAR;AACE,UADF;AAEEpB,oBAAEqB,mBAAF;AACErB,oBAAEsB,cAAF;AACEV,IAAAA,MADF;AAEE1B,IAAAA,SAAS,CAACK,SAAV,CAAoBgC,SAApB;AACI,KAACvB,gBAAEwB,aAAF,CAAgBtC,SAAS,CAACK,SAAV,CAAoBgC,SAApC,CAAD,CADJ;AAEI,MAJN,CADF,CAFF;;;;AAWD;;AAED,WAAShB,cAAT,CAAwBkB,IAAxB,EAA8B;AAC5B,UAAMC,IAAI,GAAGD,IAAI,CAACjB,QAAL,CAAcC,KAA3B;AACA,UAAMkB,QAAQ,GAAG,qCAAoBzC,SAApB,EAA+BuC,IAAI,CAACG,IAAL,CAAUC,QAAzC,CAAjB;AACA,QAAIrC,aAAa,CAACsC,GAAd,CAAkBH,QAAlB,CAAJ,EAAiC;;AAEjCnC,IAAAA,aAAa,CAACuC,GAAd,CAAkBJ,QAAlB;;AAEA,QAAID,IAAI,CAACM,SAAT,EAAoB;AAClB7B,MAAAA,aAAa,GAAG,IAAhB;;AAEA,UAAIR,cAAKsC,QAAL,CAAcP,IAAI,CAACM,SAAnB,MAAkCrC,cAAKsC,QAAL,CAAcR,IAAI,CAACG,IAAL,CAAUC,QAAxB,CAAtC,EAAyE;AACvE;AACAnC,QAAAA,OAAO,CAAC0B,aAAR,CAAsB,MAAtB,EAA8BN,UAAU,CAACa,QAAD,CAAxC;AACA;AACD;AACF;;AAEDzB,IAAAA,UAAU,CAAC6B,GAAX,CAAeN,IAAI,CAACG,IAAL,CAAUC,QAAzB;;AAEA,SAAK,MAAMK,SAAX,IAAwBR,IAAI,CAACxB,UAA7B,EAAyC;AACvCA,MAAAA,UAAU,CAAC6B,GAAX,CAAeG,SAAf;AACD;;AAEDpC,IAAAA,cAAc,CAAC2B,IAAD,CAAd;;AAEA,SAAK,MAAMU,QAAX,IAAuBT,IAAI,CAACU,OAA5B,EAAqC;AACnC,UAAIxC,mBAAmB,CAACuC,QAAD,CAAvB,EAAmC;AACjCzC,QAAAA,OAAO,CAAC0B,aAAR,CAAsB,MAAtB,EAA8BN,UAAU,CAACC,WAAW,CAACU,IAAD,EAAOU,QAAP,CAAZ,CAAxC;AACD;AACF;;AAED,SAAK,MAAME,GAAX,IAAkBX,IAAI,CAACY,IAAvB,EAA6B;AAC3B,UAAID,GAAG,CAACE,QAAJ,CAAa,QAAb,CAAJ,EAA4B;AAC1B,YAAI,CAAC/C,aAAa,CAACsC,GAAd,CAAkBf,WAAW,CAACU,IAAD,EAAOY,GAAP,CAA7B,CAAL,EAAgD;AAC9C9B,UAAAA,cAAc,CAAC,mCAAkBkB,IAAlB,EAAwBY,GAAxB,CAAD,CAAd;AACD;AACF;AACF;;AAED,QAAIX,IAAI,CAACM,SAAT,EAAoB;AAClB;AACA,YAAMQ,gBAAgB,GAAGxC,gBAAEC,UAAF;AACtB,mBAAYG,mBAAmB,EAAG,EADZ,CAAzB;;AAGA,YAAMqC,oBAAoB,GAAG3B,UAAU;AACrCC,MAAAA,WAAW,CAACU,IAAD,EAAOC,IAAI,CAACM,SAAZ,CAD0B,CAAvC;;AAGAS,MAAAA,oBAAoB,CAACzB,UAArB,CAAgCC,IAAhC;AACEjB,sBAAE0C,sBAAF,CAAyBF,gBAAzB,CADF;;AAGA9C,MAAAA,OAAO,CAAC0B,aAAR,CAAsB,MAAtB,EAA8BqB,oBAA9B;AACA/C,MAAAA,OAAO,CAAC0B,aAAR;AACE,YADF;AAEEpB,sBAAEqB,mBAAF;AACErB,sBAAEsB,cAAF,CAAiBvB,UAAjB,EAA6B;AAC3BC,sBAAEwB,aAAF,CAAgBE,IAAI,CAACiB,EAArB,CAD2B;AAE3BH,MAAAA,gBAF2B,CAA7B,CADF,CAFF;;;;AASD;AACF;;AAED,WAAS1C,cAAT,CAAwB2B,IAAxB,EAA8B;AAC5B,UAAM,EAAEI,QAAF,EAAYe,UAAZ,KAA2BnB,IAAI,CAACG,IAAtC;AACA,QAAIiB,CAAJ;;AAEA,SAAK,IAAIC,GAAT,IAAgBrB,IAAI,CAACjB,QAAL,CAAcC,KAAd,CAAoBsC,IAApC,EAA0C;AACxC,UAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;AAC3B,cAAM,EAAEE,WAAF,KAAkBF,GAAxB;AACA,YAAI,EAAEG,IAAF,KAAWH,GAAf;AACA,YAAII,GAAJ;;AAEA,YAAIN,UAAU,IAAIE,GAAG,CAACK,QAAJ,KAAiBC,SAAnC,EAA8C;AAC5CP,UAAAA,CAAC,GAAGA,CAAC,IAAI,IAAIQ,oBAAJ,CAAgB5B,IAAI,CAACwB,IAArB,EAA2B,EAAEK,MAAM,EAAEzB,QAAV,EAA3B,CAAT;AACAqB,UAAAA,GAAG,GAAGL,CAAC,CAACU,IAAF,CAAOT,GAAG,CAACK,QAAX,EAAqBL,GAAG,CAACU,MAAzB,EAAiCC,WAAjC,CAA6C;AACjDH,YAAAA,MAAM,EAAEzB,QADyC;AAEjD6B,YAAAA,cAAc,EAAE,IAFiC,EAA7C,CAAN;;;AAKA,cAAId,UAAU,KAAK,QAAf,IAA2BA,UAAU,KAAK,MAA9C,EAAsD;AACpDK,YAAAA,IAAI,IAAIH,GAAG,CAACa,KAAJ;AACH,sCAAyBT,GAAG,CAACU,KAAJ,EAAY,IADlC;AAEH,sCAAyBV,GAAG,CAACU,KAAJ,EAAY,EAF1C;;AAIA,gBAAIhB,UAAU,KAAK,QAAnB,EAA6B;AAC3BM,cAAAA,GAAG,GAAGE,SAAN;AACD;AACF;AACF;;AAEDN,QAAAA,GAAG,GAAGzD,wBAAwB,CAACwC,QAAD,EAAW;AACvCqB,UAAAA,GADuC;AAEvCD,UAAAA,IAFuC;AAGvCD,UAAAA,WAHuC,EAAX,CAA9B;;AAKD,OA5BD,MA4BO,IAAIF,GAAG,CAACe,UAAJ,CAAe,UAAf,CAAJ,EAAgC;AACrC;AACD;;AAEDnE,MAAAA,OAAO,CAAC0B,aAAR,CAAsB,MAAtB,EAA8BN,UAAU,CAACC,WAAW,CAACU,IAAD,EAAOqB,GAAP,CAAZ,CAAxC;AACD;AACF;;AAED,WAAS/B,WAAT,CAAqBU,IAArB,EAA2BqC,GAA3B,EAAgC;AAC9B,WAAOrC,IAAI,KAAKvC,SAAT;AACH,yCAAoBuC,IAApB,EAA0BqC,GAA1B,CADG;AAEH;AACE5E,IAAAA,SADF;AAEES,kBAAKoE,IAAL,CAAUtC,IAAI,CAACG,IAAL,CAAUC,QAApB,EAA8B,IAA9B,EAAoCiC,GAApC,CAFF,CAFJ;;AAMD;;AAED,WAAShD,UAAT,CAAoBnB,IAApB,EAA0B;AACxB,QAAIP,OAAO,KAAK,KAAhB,EAAuB;AACrB,aAAOY,gBAAEqB,mBAAF;AACLrB,sBAAEsB,cAAF,CAAiBtB,gBAAEC,UAAF,CAAa,SAAb,CAAjB,EAA0C,CAACD,gBAAEwB,aAAF,CAAgB7B,IAAhB,CAAD,CAA1C,CADK,CAAP;;AAGD;;AAED,WAAOK,gBAAEgE,iBAAF,CAAoB,EAApB,EAAwBhE,gBAAEwB,aAAF,CAAgB7B,IAAhB,CAAxB,CAAP;AACD;AACF,C;;AAED,SAASE,QAAT,CAAkBoE,GAAlB,EAAuB;AACrB,MAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC7B,WAAOA,GAAP;AACD;;AAED,SAAOA,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcF,GAAd,CAAP;AACD","sourcesContent":["import path from \"path\";\nimport MagicString from \"magic-string\";\nimport { types as t } from \"@marko/compiler\";\nimport { loadFileForImport, resolveRelativePath } from \"@marko/babel-utils\";\n\nexport default (entryFile, isHydrate) => {\n  const { modules, resolveVirtualDependency, hydrateIncludeImports } =\n    entryFile.markoOpts;\n  const hydratedFiles = new Set();\n  const program = entryFile.path;\n  const shouldIncludeImport = toTestFn(hydrateIncludeImports);\n\n  if (!isHydrate) {\n    addBrowserDeps(entryFile);\n    return;\n  }\n\n  const registerId = t.identifier(\"register\");\n  const watchFiles = new Set();\n  let hasComponents = false;\n  let splitComponentIndex = 0;\n  program.set(\"body\", []);\n  program.skip();\n\n  addHydrateDeps(entryFile);\n  entryFile.metadata.marko.watchFiles = Array.from(watchFiles);\n\n  if (hasComponents) {\n    const initId = t.identifier(\"init\");\n    const markoComponentsImport = importPath(\n      resolvePath(entryFile, \"marko/src/runtime/components\")\n    );\n    if (splitComponentIndex) {\n      markoComponentsImport.specifiers.push(\n        t.importSpecifier(registerId, registerId)\n      );\n    }\n    markoComponentsImport.specifiers.push(t.importSpecifier(initId, initId));\n    program.unshiftContainer(\"body\", markoComponentsImport);\n    program.pushContainer(\n      \"body\",\n      t.expressionStatement(\n        t.callExpression(\n          initId,\n          entryFile.markoOpts.runtimeId\n            ? [t.stringLiteral(entryFile.markoOpts.runtimeId)]\n            : []\n        )\n      )\n    );\n  }\n\n  function addHydrateDeps(file) {\n    const meta = file.metadata.marko;\n    const resolved = resolveRelativePath(entryFile, file.opts.filename);\n    if (hydratedFiles.has(resolved)) return;\n\n    hydratedFiles.add(resolved);\n\n    if (meta.component) {\n      hasComponents = true;\n\n      if (path.basename(meta.component) === path.basename(file.opts.filename)) {\n        // Stateful component.\n        program.pushContainer(\"body\", importPath(resolved));\n        return;\n      }\n    }\n\n    watchFiles.add(file.opts.filename);\n\n    for (const watchFile of meta.watchFiles) {\n      watchFiles.add(watchFile);\n    }\n\n    addBrowserDeps(file);\n\n    for (const imported of meta.imports) {\n      if (shouldIncludeImport(imported)) {\n        program.pushContainer(\"body\", importPath(resolvePath(file, imported)));\n      }\n    }\n\n    for (const tag of meta.tags) {\n      if (tag.endsWith(\".marko\")) {\n        if (!hydratedFiles.has(resolvePath(file, tag))) {\n          addHydrateDeps(loadFileForImport(file, tag));\n        }\n      }\n    }\n\n    if (meta.component) {\n      // Split component\n      const splitComponentId = t.identifier(\n        `component_${splitComponentIndex++}`\n      );\n      const splitComponentImport = importPath(\n        resolvePath(file, meta.component)\n      );\n      splitComponentImport.specifiers.push(\n        t.importDefaultSpecifier(splitComponentId)\n      );\n      program.pushContainer(\"body\", splitComponentImport);\n      program.pushContainer(\n        \"body\",\n        t.expressionStatement(\n          t.callExpression(registerId, [\n            t.stringLiteral(meta.id),\n            splitComponentId\n          ])\n        )\n      );\n    }\n  }\n\n  function addBrowserDeps(file) {\n    const { filename, sourceMaps } = file.opts;\n    let s;\n\n    for (let dep of file.metadata.marko.deps) {\n      if (typeof dep !== \"string\") {\n        const { virtualPath } = dep;\n        let { code } = dep;\n        let map;\n\n        if (sourceMaps && dep.startPos !== undefined) {\n          s = s || new MagicString(file.code, { source: filename });\n          map = s.snip(dep.startPos, dep.endPos).generateMap({\n            source: filename,\n            includeContent: true\n          });\n\n          if (sourceMaps === \"inline\" || sourceMaps === \"both\") {\n            code += dep.style\n              ? `\\n/*# sourceMappingURL=${map.toUrl()}*/`\n              : `\\n//# sourceMappingURL=${map.toUrl()}`;\n\n            if (sourceMaps === \"inline\") {\n              map = undefined;\n            }\n          }\n        }\n\n        dep = resolveVirtualDependency(filename, {\n          map,\n          code,\n          virtualPath\n        });\n      } else if (dep.startsWith(\"package:\")) {\n        continue;\n      }\n\n      program.pushContainer(\"body\", importPath(resolvePath(file, dep)));\n    }\n  }\n\n  function resolvePath(file, req) {\n    return file === entryFile\n      ? resolveRelativePath(file, req)\n      : resolveRelativePath(\n          entryFile,\n          path.join(file.opts.filename, \"..\", req)\n        );\n  }\n\n  function importPath(path) {\n    if (modules === \"cjs\") {\n      return t.expressionStatement(\n        t.callExpression(t.identifier(\"require\"), [t.stringLiteral(path)])\n      );\n    }\n\n    return t.importDeclaration([], t.stringLiteral(path));\n  }\n};\n\nfunction toTestFn(val) {\n  if (typeof val === \"function\") {\n    return val;\n  }\n\n  return val.test.bind(val);\n}\n"],"file":"add-dependencies.js"}