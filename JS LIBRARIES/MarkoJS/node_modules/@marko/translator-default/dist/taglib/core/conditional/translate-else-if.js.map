{"version":3,"sources":["../../../../src/taglib/core/conditional/translate-else-if.js"],"names":["exit","path","ifStatement","arguments","args","node","get","buildCodeFrameError","alternate","remove"],"mappings":"2DAAA;AACA;;AAEO,SAASA,IAAT,CAAcC,IAAd,EAAoB;AACzB,sCAAmBA,IAAnB;;AAEA,QAAM,EAAEC,WAAF,EAAeC,SAAS,EAAEC,IAA1B,KAAmCH,IAAI,CAACI,IAA9C;;AAEA,MAAI,CAACH,WAAL,EAAkB;AAChB,UAAMD,IAAI;AACPK,IAAAA,GADG,CACC,MADD;AAEHC,IAAAA,mBAFG;AAGF,sEAHE,CAAN;;AAKD;;AAEDL,EAAAA,WAAW,CAACM,SAAZ,GAAwB,4BAAiBP,IAAjB,EAAuBG,IAAvB,CAAxB;AACAH,EAAAA,IAAI,CAACQ,MAAL;AACD","sourcesContent":["import { assertNoAttributes } from \"@marko/babel-utils\";\nimport { buildIfStatement } from \"./util\";\n\nexport function exit(path) {\n  assertNoAttributes(path);\n\n  const { ifStatement, arguments: args } = path.node;\n\n  if (!ifStatement) {\n    throw path\n      .get(\"name\")\n      .buildCodeFrameError(\n        \"Invalid 'else-if' tag, expected preceding 'if' or 'else-if' tag.\"\n      );\n  }\n\n  ifStatement.alternate = buildIfStatement(path, args);\n  path.remove();\n}\n"],"file":"translate-else-if.js"}