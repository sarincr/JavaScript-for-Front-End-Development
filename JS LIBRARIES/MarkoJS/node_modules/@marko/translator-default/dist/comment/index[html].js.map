{"version":3,"sources":["../../src/comment/index[html].js"],"names":["ieConditionalCommentRegExp","path","node","test","value","replaceWith","t","stringLiteral","remove"],"mappings":"uJAAA;AACA;AACA;AACA,MAAMA,0BAA0B,GAAG,qBAAnC;;AAEe,kBAAUC,IAAV,EAAgB;AAC7B,QAAM,EAAEC,IAAF,KAAWD,IAAjB;;AAEA,MAAID,0BAA0B,CAACG,IAA3B,CAAgCD,IAAI,CAACE,KAArC,CAAJ,EAAiD;AAC/CH,IAAAA,IAAI,CAACI,WAAL;AACE,uCAAqB,0BAAM,OAAMC,gBAAEC,aAAF,CAAgBL,IAAI,CAACE,KAArB,CAA4B,KAA7D,EAAmEF,IAAnE,CADF;;AAGD,GAJD,MAIO;AACLD,IAAAA,IAAI,CAACO,MAAL;AACD;AACF","sourcesContent":["import { types as t } from \"@marko/compiler\";\nimport write from \"../util/html-out-write\";\nimport withPreviousLocation from \"../util/with-previous-location\";\nconst ieConditionalCommentRegExp = /^\\[if |<!\\[endif\\]$/;\n\nexport default function (path) {\n  const { node } = path;\n\n  if (ieConditionalCommentRegExp.test(node.value)) {\n    path.replaceWith(\n      withPreviousLocation(write`<!--${t.stringLiteral(node.value)}-->`, node)\n    );\n  } else {\n    path.remove();\n  }\n}\n"],"file":"index[html].js"}