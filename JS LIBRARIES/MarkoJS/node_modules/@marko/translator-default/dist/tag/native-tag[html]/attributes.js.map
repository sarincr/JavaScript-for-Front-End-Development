{"version":3,"sources":["../../../src/tag/native-tag[html]/attributes.js"],"names":["path","attrs","length","t","stringLiteral","quasis","expressions","curString","attrsObject","objectExpression","hasSpread","i","attr","hub","file","node","name","value","push","type","properties","spreadElement","confident","computed","attrString","objectProperty","args","callExpression","argument","join"],"mappings":"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","sourcesContent":["import { types as t } from \"@marko/compiler\";\nimport { normalizeTemplateString, importDefault } from \"@marko/babel-utils\";\nimport attrHelper from \"marko/src/runtime/html/helpers/attr\";\nimport { evaluateAttr } from \"../util\";\n\nexport default function (path, attrs) {\n  if (!attrs.length) {\n    return t.stringLiteral(\"\");\n  }\n\n  const quasis = [];\n  const expressions = [];\n  let curString = \"\";\n\n  let attrsObject = t.objectExpression([]);\n  let hasSpread = false;\n\n  for (let i = 0; i < attrs.length; i++) {\n    const attr = attrs[i];\n    const {\n      hub: { file },\n      node: { name, value }\n    } = attr;\n\n    if (!name) {\n      quasis.push(curString);\n      curString = \"\";\n      hasSpread = hasSpread || attr.type === \"MarkoSpreadAttribute\";\n      attrsObject.properties.push(t.spreadElement(value));\n      continue;\n    }\n\n    const { confident, computed } = evaluateAttr(attr);\n\n    if (confident) {\n      if (computed == null || computed === false) {\n        continue;\n      }\n\n      const attrString = attrHelper(name, computed);\n      curString += attrString;\n\n      if (attrString) {\n        attrsObject.properties.push(\n          t.objectProperty(t.stringLiteral(name), value)\n        );\n      }\n    } else {\n      const args = [t.stringLiteral(name), value];\n      quasis.push(curString);\n      curString = \"\";\n\n      attrsObject.properties.push(\n        t.objectProperty(t.stringLiteral(name), value)\n      );\n\n      expressions.push(\n        t.callExpression(\n          importDefault(\n            file,\n            \"marko/src/runtime/html/helpers/attr\",\n            \"marko_attr\"\n          ),\n          args\n        )\n      );\n    }\n  }\n  quasis.push(curString);\n  if (hasSpread) {\n    return t.callExpression(\n      importDefault(\n        path.hub.file,\n        \"marko/src/runtime/html/helpers/attrs\",\n        \"marko_attrs\"\n      ),\n      [\n        attrsObject.properties.length === 1\n          ? attrsObject.properties[0].argument\n          : attrsObject\n      ]\n    );\n  } else if (expressions.length) {\n    return normalizeTemplateString(quasis, ...expressions);\n  } else {\n    return t.stringLiteral(quasis.join(\"\"));\n  }\n}\n"],"file":"attributes.js"}