{"version":3,"sources":["../../../../src/tag/attribute/directives/no-update.js"],"names":["EMPTY_OBJECT","exit","tag","attr","_","opts","remove","node","replacement","t","markoTag","stringLiteral","bodyOnly","body","markoTagBody","key","attributes","push","markoAttribute","booleanLiteral","isPreserved","if","set","replaceWith"],"mappings":"gEAAA;AACA;AACA,MAAMA,YAAY,GAAG,EAArB,C;;AAEe;AACbC,EAAAA,IAAI,CAACC,GAAD,EAAMC,IAAN,EAAYC,CAAZ,EAAeC,IAAI,GAAGL,YAAtB,EAAoC;AACtCG,IAAAA,IAAI,CAACG,MAAL;AACA,UAAM,EAAEC,IAAF,KAAWL,GAAjB;AACA,UAAMM,WAAW,GAAGC,gBAAEC,QAAF;AAClBD,oBAAEE,aAAF,CAAgB,WAAhB,CADkB;AAElB,MAFkB;AAGlBN,IAAAA,IAAI,CAACO,QAAL,GAAgBL,IAAI,CAACM,IAArB,GAA4BJ,gBAAEK,YAAF,CAAe,CAACP,IAAD,CAAf,CAHV,CAApB;;;AAMA,QAAI,6BAAYL,GAAZ,CAAJ,EAAsB;AACpBM,MAAAA,WAAW,CAACO,GAAZ,GAAkBR,IAAI,CAACQ,GAAvB;AACAP,MAAAA,WAAW,CAACQ,UAAZ,CAAuBC,IAAvB;AACER,sBAAES,cAAF,CAAiB,GAAjB,EAAsBT,gBAAEU,cAAF,CAAiB,IAAjB,CAAtB,CADF;;;AAIA,UAAId,IAAI,CAACO,QAAT,EAAmB;AACjBJ,QAAAA,WAAW,CAACQ,UAAZ,CAAuBC,IAAvB;AACER,wBAAES,cAAF,CAAiB,GAAjB,EAAsBT,gBAAEU,cAAF,CAAiB,IAAjB,CAAtB,CADF;;AAGD;AACF,KAXD,MAWO;AACLX,MAAAA,WAAW,CAACO,GAAZ,GAAkB,wCAAwB,KAAIR,IAAI,CAACQ,GAAI,EAAvD;AACD;;AAEDP,IAAAA,WAAW,CAACY,WAAZ,GAA0B,IAA1B;;AAEA,QAAIf,IAAI,CAACgB,EAAT,EAAa;AACXb,MAAAA,WAAW,CAACQ,UAAZ,CAAuBC,IAAvB,CAA4BR,gBAAES,cAAF,CAAiB,GAAjB,EAAsBb,IAAI,CAACgB,EAA3B,CAA5B;AACD;;AAED,QAAIhB,IAAI,CAACO,QAAT,EAAmB;AACjBV,MAAAA,GAAG,CAACoB,GAAJ,CAAQ,MAAR,EAAgBb,gBAAEK,YAAF,CAAe,CAACN,WAAD,CAAf,CAAhB;AACD,KAFD,MAEO;AACLN,MAAAA,GAAG,CAACqB,WAAJ,CAAgBf,WAAhB;AACD;AACF,GApCY,E","sourcesContent":["import { types as t } from \"@marko/compiler\";\nimport { normalizeTemplateString, isNativeTag } from \"@marko/babel-utils\";\nconst EMPTY_OBJECT = {};\n\nexport default {\n  exit(tag, attr, _, opts = EMPTY_OBJECT) {\n    attr.remove();\n    const { node } = tag;\n    const replacement = t.markoTag(\n      t.stringLiteral(\"_preserve\"),\n      [],\n      opts.bodyOnly ? node.body : t.markoTagBody([node])\n    );\n\n    if (isNativeTag(tag)) {\n      replacement.key = node.key;\n      replacement.attributes.push(\n        t.markoAttribute(\"n\", t.booleanLiteral(true))\n      );\n\n      if (opts.bodyOnly) {\n        replacement.attributes.push(\n          t.markoAttribute(\"b\", t.booleanLiteral(true))\n        );\n      }\n    } else {\n      replacement.key = normalizeTemplateString`p_${node.key}`;\n    }\n\n    replacement.isPreserved = true;\n\n    if (opts.if) {\n      replacement.attributes.push(t.markoAttribute(\"i\", opts.if));\n    }\n\n    if (opts.bodyOnly) {\n      tag.set(\"body\", t.markoTagBody([replacement]));\n    } else {\n      tag.replaceWith(replacement);\n    }\n  }\n};\n"],"file":"no-update.js"}