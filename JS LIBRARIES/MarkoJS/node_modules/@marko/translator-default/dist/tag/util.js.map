{"version":3,"sources":["../../src/tag/util.js"],"names":["getAttrs","path","preserveNames","skipRenderBody","node","attributes","body","params","hasDynamicAttrTags","attrsLen","length","childLen","properties","targetObjects","tagDef","foundProperties","i","name","value","attrDef","getAttribute","targetProperties","targetProperty","preserveName","key","removeDashes","dynamicAttribute","targetObject","push","t","objectProperty","stringLiteral","objectExpression","camelCase","spreadElement","endDynamicAttrTagsIndex","findLastIndex","insertBefore","slice","map","child","skip","arrowFunctionExpression","identifier","blockStatement","forEachAttribute","attr","defaultValue","undefined","required","get","buildCodeFrameError","nullLiteral","isSpreadElement","argument","buildEventHandlerArray","handlers","arrayExpression","Object","entries","eventName","arguments","args","once","parts","booleanLiteral","evaluateAttr","confident","computed","isRegExpLiteral","evaluated","evaluate","string","replace","_","letter","toUpperCase","arr","check"],"mappings":"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","sourcesContent":["import { types as t } from \"@marko/compiler\";\nimport { getTagDef } from \"@marko/babel-utils\";\n\nexport function getAttrs(path, preserveNames, skipRenderBody) {\n  const { node } = path;\n  const {\n    attributes,\n    body: { body, params },\n    hasDynamicAttrTags\n  } = node;\n  const attrsLen = attributes.length;\n  const childLen = body.length;\n  const properties = [];\n  const targetObjects = {};\n  const tagDef = getTagDef(path);\n  const foundProperties = {};\n\n  for (let i = 0; i < attrsLen; i++) {\n    const { name, value } = attributes[i];\n\n    if (name) {\n      const attrDef = tagDef && tagDef.getAttribute(name);\n      let targetProperties = properties;\n      let targetProperty = name;\n      let preserveName = preserveNames;\n\n      if (attrDef) {\n        if (attrDef.targetProperty) {\n          const key = attrDef.targetProperty;\n          preserveName =\n            attrDef.preserveName !== false && attrDef.removeDashes !== true;\n\n          if (attrDef.dynamicAttribute) {\n            let targetObject = targetObjects[key];\n\n            if (!targetObject) {\n              properties.push(\n                t.objectProperty(\n                  t.stringLiteral(key),\n                  (targetObject = targetObjects[key] = t.objectExpression([]))\n                )\n              );\n            }\n\n            targetProperties = targetObject.properties;\n          } else {\n            targetProperty = key;\n          }\n        } else if (\n          !preserveName &&\n          (attrDef.preserveName === true || attrDef.removeDashes === false)\n        ) {\n          preserveName = true;\n        }\n      }\n\n      if (!preserveName) {\n        targetProperty = camelCase(targetProperty);\n      }\n\n      foundProperties[targetProperty] = true;\n      targetProperties.push(\n        t.objectProperty(t.stringLiteral(targetProperty), value)\n      );\n    } else {\n      properties.push(t.spreadElement(value));\n    }\n  }\n\n  if (!skipRenderBody && childLen) {\n    let endDynamicAttrTagsIndex = -1;\n\n    if (hasDynamicAttrTags) {\n      endDynamicAttrTagsIndex = findLastIndex(\n        body,\n        ({ value }) => value === \"END_ATTRIBUTE_TAGS\"\n      );\n      path\n        .insertBefore(body.slice(0, endDynamicAttrTagsIndex))\n        .map(child => child.skip());\n    }\n\n    if (!hasDynamicAttrTags || endDynamicAttrTagsIndex !== childLen - 1) {\n      properties.push(\n        t.objectProperty(\n          t.stringLiteral(\"renderBody\"),\n          t.arrowFunctionExpression(\n            [t.identifier(\"out\"), ...params],\n            t.blockStatement(\n              hasDynamicAttrTags\n                ? body.slice(endDynamicAttrTagsIndex + 1)\n                : body\n            )\n          )\n        )\n      );\n    }\n  }\n\n  // Default parameters\n  tagDef &&\n    tagDef.forEachAttribute &&\n    tagDef.forEachAttribute(attr => {\n      if (foundProperties[attr.name] || attr.dynamicAttribute) {\n        return;\n      }\n\n      if (attr.defaultValue !== undefined) {\n        properties.push(\n          t.objectProperty(\n            t.stringLiteral(attr.name),\n            t.stringLiteral(attr.defaultValue + \"\")\n          )\n        );\n      } else if (attr.required) {\n        throw path\n          .get(\"name\")\n          .buildCodeFrameError(`The \"${attr.name}\" attribute is required.`);\n      }\n    });\n\n  if (properties.length === 0) {\n    return t.nullLiteral();\n  }\n\n  if (properties.length === 1 && t.isSpreadElement(properties[0])) {\n    return properties[0].argument;\n  }\n\n  return t.objectExpression(properties);\n}\n\nexport function buildEventHandlerArray(path) {\n  const { handlers } = path.node;\n  if (!handlers) {\n    return [];\n  }\n\n  return [\n    t.arrayExpression(\n      Object.entries(handlers).map(([eventName, { arguments: args, once }]) => {\n        const parts = [\n          t.stringLiteral(eventName),\n          args[0],\n          t.booleanLiteral(once)\n        ];\n\n        if (args.length > 1) {\n          parts.push(t.arrayExpression(args.slice(1)));\n        }\n\n        return t.arrayExpression(parts);\n      })\n    )\n  ];\n}\n\nexport function evaluateAttr(attr) {\n  const name = attr.get(\"name\").node;\n  const value = attr.get(\"value\");\n  let confident = false;\n  let computed = undefined;\n\n  if (name) {\n    if (value.isRegExpLiteral()) {\n      confident = true;\n      computed = value.get(\"pattern\").node;\n    } else {\n      const evaluated = value.evaluate();\n      ({ confident, value: computed } = evaluated);\n\n      if (computed === true) {\n        computed = \"\";\n      } else if (computed != null && computed !== false) {\n        computed = computed + \"\";\n      }\n    }\n  }\n\n  return {\n    confident,\n    computed\n  };\n}\n\nfunction camelCase(string) {\n  return string.replace(/-([a-z])/g, (_, letter) => letter.toUpperCase());\n}\n\nfunction findLastIndex(arr, check) {\n  for (let i = arr.length; i--; ) {\n    if (check(arr[i])) {\n      return i;\n    }\n  }\n}\n"],"file":"util.js"}