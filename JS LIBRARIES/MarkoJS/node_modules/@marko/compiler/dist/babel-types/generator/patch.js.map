{"version":3,"sources":["../../../src/babel-types/generator/patch.js"],"names":["UNENCLOSED_WHITESPACE_TYPES","Object","assign","Printer","prototype","MarkoDocumentType","node","token","value","MarkoDeclaration","MarkoCDATA","MarkoComment","MarkoPlaceholder","parent","parentBody","body","prev","indexOf","t","isMarkoText","isMarkoPlaceholder","removeTrailingNewline","escape","print","MarkoScriptlet","isProgram","static","length","newline","indent","printSequence","dedent","MarkoClass","MarkoAttribute","default","name","modifier","arguments","printList","isBooleanLiteral","isFunctionExpression","id","async","generator","params","bound","printWithParansIfNeeded","call","MarkoSpreadAttribute","MarkoText","concatToPrev","isMultiLine","test","isRootLevel","word","MarkoTagBody","MarkoTag","isDynamicTag","isStringLiteral","tagName","rawValue","var","attributes","printJoin","separator","spaceSeparator","SELF_CLOSING","voidElements","includes","svgElements","needsParans","hasUnenclosedWhitespace","type"],"mappings":"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","sourcesContent":["import \"../types/patch\";\n\nimport * as t from \"@babel/types\";\nimport SELF_CLOSING from \"self-closing-tags\";\nimport Printer from \"@babel/generator/lib/printer\";\n\nconst UNENCLOSED_WHITESPACE_TYPES = [\n  \"LogicalExpression\",\n  \"AssignmentExpression\",\n  \"ConditionalExpression\",\n  \"BinaryExpression\",\n  \"NewExpression\",\n  \"Function\",\n  \"AssignmentExpression\"\n];\n\nObject.assign(Printer.prototype, {\n  MarkoDocumentType(node) {\n    this.token(\"<!\");\n    this.token(node.value);\n    this.token(\">\");\n  },\n  MarkoDeclaration(node) {\n    this.token(\"<?\");\n    this.token(node.value);\n    this.token(\"?>\");\n  },\n  MarkoCDATA(node) {\n    this.token(\"<![CDATA[\");\n    this.token(node.value);\n    this.token(\"]]>\");\n  },\n  MarkoComment(node) {\n    this.token(\"<!--\");\n    this.token(node.value);\n    this.token(\"-->\");\n  },\n  MarkoPlaceholder(node, parent) {\n    if (parent) {\n      const parentBody = parent.body;\n      const prev = parentBody[parentBody.indexOf(node) - 1];\n\n      if (prev && (t.isMarkoText(prev) || t.isMarkoPlaceholder(prev))) {\n        this.removeTrailingNewline();\n      }\n    }\n\n    this.token(node.escape ? \"${\" : \"$!{\");\n    this.print(node.value, node);\n    this.token(\"}\");\n  },\n  MarkoScriptlet(node, parent) {\n    this.removeTrailingNewline();\n\n    if (!(t.isProgram(parent) && parent.body.indexOf(node) === 0)) {\n      this.token(\"\\n\");\n    }\n\n    this.token(`${node.static ? \"static\" : \"$\"} `);\n\n    if (node.body.length === 1) {\n      // TODO should determine if node has unenclosed newlines.\n      this.print(node.body[0], node);\n    } else {\n      this.token(\"{\");\n      this.newline();\n      this.indent();\n      this.printSequence(node.body, node);\n      this.dedent();\n      this.token(\"}\");\n    }\n  },\n  MarkoClass(node) {\n    this.token(\"class\");\n    this.token(\" \");\n    this.print(node.body, node);\n  },\n  MarkoAttribute(node) {\n    const value = node.value;\n\n    if (!node.default) {\n      this.token(node.name);\n\n      if (node.modifier) {\n        this.token(\":\");\n        this.token(node.modifier);\n      }\n\n      if (node.arguments && node.arguments.length) {\n        this.token(\"(\");\n        this.printList(node.arguments, node);\n        this.token(\")\");\n      }\n    }\n\n    if (node.default || !t.isBooleanLiteral(value, { value: true })) {\n      if (\n        t.isFunctionExpression(value) &&\n        !(value.id || value.async || value.generator)\n      ) {\n        this.token(\"(\");\n        this.printList(value.params, value);\n        this.token(\") \");\n        this.print(value.body, value);\n      } else {\n        this.token(node.bound ? \":=\" : \"=\");\n        printWithParansIfNeeded.call(this, value, node);\n      }\n    }\n  },\n  MarkoSpreadAttribute(node) {\n    this.token(\"...\");\n    printWithParansIfNeeded.call(this, node.value, node);\n  },\n  MarkoText(node, parent) {\n    const parentBody = parent.body;\n    const prev = parentBody[parentBody.indexOf(node) - 1];\n    const concatToPrev = prev && t.isMarkoPlaceholder(prev);\n    let { value } = node;\n\n    if (concatToPrev) {\n      this.removeTrailingNewline();\n    }\n\n    const isMultiLine = /[\\r\\n]/g.test(value);\n    const isRootLevel = !concatToPrev && t.isProgram(parent);\n\n    if (isRootLevel) {\n      if (isMultiLine) {\n        this.token(\"---\\n\");\n      } else {\n        this.token(\"-- \");\n      }\n    }\n\n    this.word(value);\n\n    if (isMultiLine && isRootLevel) {\n      this.token(\"\\n---\");\n    }\n  },\n  MarkoTagBody(node) {\n    this.printSequence(node.body, node, { indent: true });\n  },\n  MarkoTag(node) {\n    const isDynamicTag = !t.isStringLiteral(node.name);\n    const tagName = !isDynamicTag && node.name.value;\n    const rawValue = node.rawValue;\n\n    if (\n      tagName === \"style\" &&\n      /^style(?:\\.[^\\s]+)?\\s*\\{[\\s\\S]*}$/.test(rawValue)\n    ) {\n      this.token(rawValue);\n      return;\n    }\n\n    this.token(\"<\");\n\n    if (rawValue) {\n      this.token(rawValue);\n    } else {\n      if (isDynamicTag) {\n        this.token(\"${\");\n        this.print(node.name, node);\n        this.token(\"}\");\n      } else {\n        this.token(tagName);\n      }\n\n      if (node.var) {\n        this.token(\"/\");\n        this.print(node.var, node);\n      }\n\n      if (node.arguments && node.arguments.length) {\n        this.token(\"(\");\n        this.printList(node.arguments, node);\n        this.token(\")\");\n      }\n\n      if (node.body.params.length) {\n        this.token(\"|\");\n        this.printList(node.body.params, node);\n        this.token(\"|\");\n      }\n\n      if (node.attributes.length) {\n        if (\n          !(node.attributes && node.attributes[0] && node.attributes[0].default)\n        ) {\n          this.token(\" \");\n        }\n\n        this.printJoin(node.attributes, node, { separator: spaceSeparator });\n      }\n    }\n\n    if (SELF_CLOSING.voidElements.includes(tagName)) {\n      this.token(\">\");\n    } else if (\n      !node.body.body.length ||\n      SELF_CLOSING.svgElements.includes(tagName)\n    ) {\n      this.token(\"/>\");\n    } else {\n      this.token(\">\");\n      this.newline();\n      this.print(node.body, node);\n      this.token(\"</\");\n      if (!isDynamicTag) {\n        this.token(tagName);\n      }\n      this.token(\">\");\n    }\n  }\n});\n\nfunction spaceSeparator() {\n  this.token(\" \");\n}\n\nfunction printWithParansIfNeeded(value, parent) {\n  const needsParans = hasUnenclosedWhitespace(value);\n\n  if (needsParans) {\n    this.token(\"(\");\n  }\n\n  this.print(value, parent);\n\n  if (needsParans) {\n    this.token(\")\");\n  }\n}\n\nfunction hasUnenclosedWhitespace(node) {\n  return UNENCLOSED_WHITESPACE_TYPES.includes(node.type);\n}\n"],"file":"patch.js"}