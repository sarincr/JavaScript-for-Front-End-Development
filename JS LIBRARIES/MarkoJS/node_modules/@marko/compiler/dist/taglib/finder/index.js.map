{"version":3,"sources":["../../../src/taglib/finder/index.js"],"names":["nodePath","require","resolveFrom","silent","taglibFS","taglibLoader","lassoPackageRoot","scanTagsDir","DependencyChain","hasOwnProperty","Object","prototype","findCache","excludedDirs","excludedPackages","reset","clearCache","getModuleRootPackage","dirname","getRootPackage","e","undefined","getAllDependencyNames","pkg","map","dependencies","keys","forEach","name","peerDependencies","devDependencies","find","registeredTaglibs","found","added","helper","alreadyAdded","taglibPath","call","addTaglib","taglib","path","push","foundTaglibPackages","rootDirname","process","cwd","rootPkg","__dirname","curDirname","join","existsSync","loadTaglibFromFile","tagsDir","componentsPath","createTaglib","parentDirname","concat","excludeDir","dir","excludePackage","file","curFS","statSync","_","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nvar nodePath = require(\"path\");\nvar resolveFrom = require(\"resolve-from\").silent;\nvar taglibFS = require(\"../fs\");\nvar taglibLoader = require(\"../loader\");\nvar lassoPackageRoot = require(\"lasso-package-root\");\nvar scanTagsDir = require(\"../loader/scanTagsDir\");\nvar DependencyChain = require(\"../loader/DependencyChain\");\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar findCache = {};\nvar excludedDirs = {};\nvar excludedPackages = {};\n\n/**\n * Reset all internal state to the default state. This\n * was added for testing purposes.\n */\nfunction reset() {\n  clearCache();\n  excludedDirs = {};\n  excludedPackages = {};\n}\n\nfunction getModuleRootPackage(dirname) {\n  try {\n    return lassoPackageRoot.getRootPackage(dirname);\n  } catch (e) {\n    return undefined;\n  }\n}\n\nfunction getAllDependencyNames(pkg) {\n  var map = {};\n\n  if (pkg.dependencies) {\n    Object.keys(pkg.dependencies).forEach(name => {\n      map[name] = true;\n    });\n  }\n\n  if (pkg.peerDependencies) {\n    Object.keys(pkg.peerDependencies).forEach(name => {\n      map[name] = true;\n    });\n  }\n\n  if (pkg.devDependencies) {\n    Object.keys(pkg.devDependencies).forEach(name => {\n      map[name] = true;\n    });\n  }\n\n  return Object.keys(map);\n}\n\nfunction find(dirname, registeredTaglibs) {\n  var found = findCache[dirname];\n  if (found) {\n    return found;\n  }\n\n  found = [];\n\n  var added = {};\n\n  var helper = {\n    alreadyAdded: function (taglibPath) {\n      return hasOwnProperty.call(added, taglibPath);\n    },\n    addTaglib: function (taglib) {\n      if (added[taglib.path]) {\n        return;\n      }\n\n      added[taglib.path] = true;\n      found.push(taglib);\n    },\n    foundTaglibPackages: {}\n  };\n\n  var rootDirname = process.cwd(); // Don't search up past this directory\n  var rootPkg = getModuleRootPackage(dirname);\n  if (rootPkg) {\n    rootDirname = rootPkg.__dirname; // Use the package's root directory as the top-level directory\n  }\n\n  // First walk up the directory tree looking for marko.json files or components/ directories\n  let curDirname = dirname;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (!excludedDirs[curDirname]) {\n      let taglibPath = nodePath.join(curDirname, \"marko.json\");\n      let taglib;\n\n      if (existsSync(taglibPath)) {\n        taglib = taglibLoader.loadTaglibFromFile(taglibPath);\n        helper.addTaglib(taglib);\n      }\n\n      if (!taglib || taglib.tagsDir === undefined) {\n        let componentsPath = nodePath.join(curDirname, \"components\");\n\n        if (\n          existsSync(componentsPath) &&\n          !excludedDirs[componentsPath] &&\n          !helper.alreadyAdded(componentsPath)\n        ) {\n          let taglib = taglibLoader.createTaglib(componentsPath);\n          scanTagsDir(\n            componentsPath,\n            nodePath.dirname(componentsPath),\n            \"components\",\n            taglib,\n            new DependencyChain([componentsPath])\n          );\n          helper.addTaglib(taglib);\n        }\n      }\n    }\n\n    if (curDirname === rootDirname) {\n      break;\n    }\n\n    let parentDirname = nodePath.dirname(curDirname);\n    if (!parentDirname || parentDirname === curDirname) {\n      break;\n    }\n    curDirname = parentDirname;\n  }\n\n  if (rootPkg) {\n    // Now look for `marko.json` from installed packages\n    getAllDependencyNames(rootPkg).forEach(name => {\n      if (!excludedPackages[name]) {\n        let taglibPath = resolveFrom(\n          rootPkg.__dirname,\n          nodePath.join(name, \"marko.json\")\n        );\n        if (taglibPath) {\n          var taglib = taglibLoader.loadTaglibFromFile(taglibPath);\n          helper.addTaglib(taglib);\n        }\n      }\n    });\n  }\n\n  found = found.concat(registeredTaglibs);\n\n  findCache[dirname] = found;\n\n  return found;\n}\n\nfunction clearCache() {\n  findCache = {};\n}\n\nfunction excludeDir(dir) {\n  excludedDirs[dir] = true;\n}\n\nfunction excludePackage(name) {\n  excludedPackages[name] = true;\n}\n\nfunction existsSync(file) {\n  try {\n    taglibFS.curFS.statSync(file);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n\nexports.reset = reset;\nexports.find = find;\nexports.clearCache = clearCache;\nexports.excludeDir = excludeDir;\nexports.excludePackage = excludePackage;\n"],"file":"index.js"}