{"version":3,"sources":["../../../src/taglib/loader/Taglib.js"],"names":["ok","require","path","loaders","hasOwnProperty","Object","prototype","handleImport","taglib","importedTaglib","importsLookup","call","imports","push","forEach","nestedImportedTaglib","Taglib","constructor","filePath","id","dirname","tags","migrators","transformers","attributes","patternAttributes","addAttribute","attribute","key","pattern","name","Error","inspect","getAttribute","i","len","length","patternAttribute","test","addTag","tag","arguments","JSON","stringify","taglibId","addImport","loadTaglibFromFile","toJSON","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nvar ok = require(\"assert\").ok;\nvar path = require(\"path\");\nvar loaders = require(\"./loaders\");\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction handleImport(taglib, importedTaglib) {\n  var importsLookup = taglib.importsLookup || (taglib.importsLookup = {});\n  if (hasOwnProperty.call(importsLookup, importedTaglib.path)) {\n    return;\n  }\n\n  importsLookup[importedTaglib.path] = importedTaglib;\n\n  if (!taglib.imports) {\n    taglib.imports = [];\n  }\n\n  taglib.imports.push(importedTaglib);\n\n  if (importedTaglib.imports) {\n    importedTaglib.imports.forEach(function (nestedImportedTaglib) {\n      handleImport(taglib, nestedImportedTaglib);\n    });\n  }\n}\n\nclass Taglib {\n  constructor(filePath) {\n    ok(filePath, '\"filePath\" expected');\n    this.filePath = this.path /* deprecated */ = this.id = filePath;\n    this.dirname = path.dirname(this.filePath);\n    this.tags = {};\n    this.migrators = [];\n    this.transformers = [];\n    this.attributes = {};\n    this.patternAttributes = [];\n    this.imports = null;\n    this.importsLookup = null;\n  }\n\n  addAttribute(attribute) {\n    ok(attribute.key, '\"key\" is required for global attributes');\n\n    attribute.filePath = this.filePath;\n\n    if (!attribute.pattern && !attribute.name) {\n      throw new Error(\n        \"Invalid attribute: \" + require(\"util\").inspect(attribute)\n      );\n    }\n\n    this.attributes[attribute.key] = attribute;\n  }\n  getAttribute(name) {\n    var attribute = this.attributes[name];\n    if (!attribute) {\n      for (var i = 0, len = this.patternAttributes.length; i < len; i++) {\n        var patternAttribute = this.patternAttributes[i];\n        if (patternAttribute.pattern.test(name)) {\n          attribute = patternAttribute;\n        }\n      }\n    }\n    return attribute;\n  }\n  addTag(tag) {\n    ok(arguments.length === 1, \"Invalid args\");\n    if (!tag.name) {\n      throw new Error('\"tag.name\" is required: ' + JSON.stringify(tag));\n    }\n    this.tags[tag.name] = tag;\n    tag.taglibId = this.id || this.path;\n  }\n\n  addImport(path) {\n    var importedTaglib = loaders.loadTaglibFromFile(path);\n    handleImport(this, importedTaglib);\n  }\n\n  toJSON() {\n    return {\n      path: this.path,\n      tags: this.tags,\n      attributes: this.attributes,\n      patternAttributes: this.patternAttributes,\n      imports: this.imports\n    };\n  }\n}\n\nmodule.exports = Taglib;\n"],"file":"Taglib.js"}