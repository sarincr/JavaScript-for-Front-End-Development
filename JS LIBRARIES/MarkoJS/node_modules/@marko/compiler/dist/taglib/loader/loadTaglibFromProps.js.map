{"version":3,"sources":["../../../src/taglib/loader/loadTaglibFromProps.js"],"names":["ok","require","resolveFrom","silent","nodePath","types","taglibFS","scanTagsDir","propertyHandlers","jsonFileReader","DependencyChain","createError","loaders","markoModules","hasOwnProperty","Object","prototype","resolveRelative","dirname","value","normalizeHook","path","hook","TaglibLoader","constructor","taglib","dependencyChain","filePath","load","taglibProps","toString","id","packageJsonPath","join","pkg","readFileSync","name","e","_handleTag","tagName","tagProps","tagFilePath","tag","resolve","curFS","statSync","_","Error","Tag","append","loadTagFromProps","undefined","addTag","startsWith","slice","attrKey","substring","attr","loadAttributeFromProps","key","addAttribute","attributes","keys","forEach","attrName","attrDef","tags","call","tagsDir","dir","Array","isArray","i","length","taglibImports","imports","importPath","curImport","basename","packagePath","packageDir","dependencies","dependencyNames","j","dependencyName","addImport","migrator","migrate","migrators","push","translate","translator","taglibId","transformer","transform","transformers","attributeGroups","attrGroupName","attrGroup","attrGroupDependencyChain","rawAttrGroup","rawAttrDef","loadTaglibFromProps","taglibLoader","err","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,EAA3B;AACA,IAAIE,WAAW,GAAGD,OAAO,CAAC,cAAD,CAAP,CAAwBE,MAA1C;AACA,IAAIC,QAAQ,GAAGH,OAAO,CAAC,MAAD,CAAtB;AACA,IAAII,KAAK,GAAGJ,OAAO,CAAC,SAAD,CAAnB;AACA,IAAIK,QAAQ,GAAGL,OAAO,CAAC,OAAD,CAAtB;AACA,IAAIM,WAAW,GAAGN,OAAO,CAAC,eAAD,CAAzB;AACA,IAAIO,gBAAgB,GAAGP,OAAO,CAAC,mBAAD,CAA9B;AACA,IAAIQ,cAAc,GAAGR,OAAO,CAAC,oBAAD,CAA5B;AACA,IAAIS,eAAe,GAAGT,OAAO,CAAC,mBAAD,CAA7B;AACA,IAAIU,WAAW,GAAGV,OAAO,CAAC,yBAAD,CAAzB;AACA,IAAIW,OAAO,GAAGX,OAAO,CAAC,WAAD,CAArB;AACA,IAAIY,YAAY,GAAGZ,OAAO,CAAC,kBAAD,CAA1B;AACA,IAAIa,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAtC;;AAEA,SAASG,eAAT,CAAyBC,OAAzB,EAAkCC,KAAlC,EAAyC;AACvC,SAAOA,KAAK,CAAC,CAAD,CAAL,KAAa,GAAb,GAAmBjB,WAAW,CAACgB,OAAD,EAAUC,KAAV,CAA9B,GAAiDA,KAAxD;AACD;;AAED,SAASC,aAAT,CAAuBF,OAAvB,EAAgCC,KAAhC,EAAuC;AACrC,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,IAAAA,KAAK,GAAGF,eAAe,CAACC,OAAD,EAAUC,KAAV,CAAvB;AACA,WAAO;AACLE,MAAAA,IAAI,EAAEF,KADD;AAEL,UAAIG,IAAJ,GAAW;AACT,eAAOT,YAAY,CAACZ,OAAb,CAAqBkB,KAArB,CAAP;AACD,OAJI,EAAP;;AAMD;AACD,SAAO,EAAEG,IAAI,EAAEH,KAAR,EAAP;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMI,YAAN,CAAmB;AACjBC,EAAAA,WAAW,CAACC,MAAD,EAASC,eAAT,EAA0B;AACnC1B,IAAAA,EAAE;AACA0B,IAAAA,eAAe,YAAYhB,eAD3B;AAEA,oCAFA,CAAF;;;AAKA,SAAKgB,eAAL,GAAuBA,eAAvB;;AAEA,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKE,QAAL,GAAgBF,MAAM,CAACE,QAAvB;AACA,SAAKT,OAAL,GAAeO,MAAM,CAACP,OAAtB;AACD;;AAEDU,EAAAA,IAAI,CAACC,WAAD,EAAc;AAChB,QAAIJ,MAAM,GAAG,KAAKA,MAAlB;;AAEAjB,IAAAA,gBAAgB,CAACqB,WAAD,EAAc,IAAd,EAAoB,KAAKH,eAAL,CAAqBI,QAArB,EAApB,CAAhB;;AAEA,QAAI,CAACL,MAAM,CAACM,EAAZ,EAAgB;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAIJ,QAAQ,GAAG,KAAKA,QAApB;AACA,UAAIT,OAAO,GAAG,KAAKA,OAAnB;;AAEA,UAAIc,eAAe,GAAG5B,QAAQ,CAAC6B,IAAT,CAAcf,OAAd,EAAuB,cAAvB,CAAtB;;AAEA,UAAI;AACF,YAAIgB,GAAG,GAAGzB,cAAc,CAAC0B,YAAf,CAA4BH,eAA5B,CAAV;AACAP,QAAAA,MAAM,CAACM,EAAP,GAAYG,GAAG,CAACE,IAAhB;AACD,OAHD,CAGE,OAAOC,CAAP,EAAU;AACV;AACD;;AAED,UAAI,CAACZ,MAAM,CAACM,EAAZ,EAAgB;AACdN,QAAAA,MAAM,CAACM,EAAP,GAAYJ,QAAZ;AACD;AACF;AACF;;AAEDW,EAAAA,UAAU,CAACC,OAAD,EAAUpB,KAAV,EAAiBO,eAAjB,EAAkC;AAC1C,QAAIc,QAAJ;AACA,QAAIC,WAAW,GAAG,KAAKd,QAAvB;;AAEA,QAAIe,GAAJ;;AAEA,QAAI,OAAOvB,KAAP,KAAiB,QAArB,EAA+B;AAC7BsB,MAAAA,WAAW,GAAGrC,QAAQ,CAACuC,OAAT,CAAiB,KAAKzB,OAAtB,EAA+BC,KAA/B,CAAd;;AAEA,UAAI;AACFb,QAAAA,QAAQ,CAACsC,KAAT,CAAeC,QAAf,CAAwBJ,WAAxB;AACD,OAFD,CAEE,OAAOK,CAAP,EAAU;AACV,cAAM,IAAIC,KAAJ;AACJ;AACEN,QAAAA,WADF;AAEE,6BAFF;AAGEf,QAAAA,eAHF;AAIE,WALE,CAAN;;AAOD;;AAEDgB,MAAAA,GAAG,GAAG,IAAIrC,KAAK,CAAC2C,GAAV,CAAcP,WAAd,CAAN;;AAEAD,MAAAA,QAAQ,GAAG/B,cAAc,CAAC0B,YAAf,CAA4BM,WAA5B,CAAX;AACAf,MAAAA,eAAe,GAAGA,eAAe,CAACuB,MAAhB,CAAuBR,WAAvB,CAAlB;AACD,KAnBD,MAmBO;AACLC,MAAAA,GAAG,GAAG,IAAIrC,KAAK,CAAC2C,GAAV,CAAc,KAAKrB,QAAnB,CAAN;AACAa,MAAAA,QAAQ,GAAGrB,KAAX;AACD;;AAEDP,IAAAA,OAAO,CAACsC,gBAAR,CAAyBR,GAAzB,EAA8BF,QAA9B,EAAwCd,eAAxC;;AAEA,QAAIgB,GAAG,CAACN,IAAJ,KAAae,SAAjB,EAA4B;AAC1BT,MAAAA,GAAG,CAACN,IAAJ,GAAWG,OAAX;AACD;;AAED,SAAKd,MAAL,CAAY2B,MAAZ,CAAmBV,GAAnB;AACD;;AAED;AACA;AACA,KAAG,CAACN,IAAD,EAAOjB,KAAP,EAAc;AACf,QAAIM,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAIE,QAAQ,GAAG,KAAKA,QAApB;;AAEA,QAAIS,IAAI,CAACiB,UAAL,CAAgB,GAAhB,CAAJ,EAA0B;AACxB,UAAId,OAAO,GAAGH,IAAI,CAACkB,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAd;AACA,WAAKhB,UAAL,CAAgBC,OAAhB,EAAyBpB,KAAzB,EAAgC,KAAKO,eAAL,CAAqBuB,MAArB,CAA4Bb,IAA5B,CAAhC;AACD,KAHD,MAGO,IAAIA,IAAI,CAACiB,UAAL,CAAgB,GAAhB,CAAJ,EAA0B;AAC/B,UAAIE,OAAO,GAAGnB,IAAI,CAACoB,SAAL,CAAe,CAAf,CAAd;;AAEA,UAAIC,IAAI,GAAG7C,OAAO,CAAC8C,sBAAR;AACTH,MAAAA,OADS;AAETpC,MAAAA,KAFS;AAGT,WAAKO,eAAL,CAAqBuB,MAArB,CAA4B,MAAMM,OAAlC,CAHS,CAAX;;;AAMAE,MAAAA,IAAI,CAAC9B,QAAL,GAAgBA,QAAhB;AACA8B,MAAAA,IAAI,CAACE,GAAL,GAAWJ,OAAX;;AAEA9B,MAAAA,MAAM,CAACmC,YAAP,CAAoBH,IAApB;AACD,KAbM,MAaA;AACL,aAAO,KAAP;AACD;AACF;;AAEDI,EAAAA,UAAU,CAAC1C,KAAD,EAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIM,MAAM,GAAG,KAAKA,MAAlB;;AAEAV,IAAAA,MAAM,CAAC+C,IAAP,CAAY3C,KAAZ,EAAmB4C,OAAnB,CAA2B,CAAAC,QAAQ,KAAI;AACrC,UAAIC,OAAO,GAAG9C,KAAK,CAAC6C,QAAD,CAAnB;;AAEA,UAAIP,IAAI,GAAG7C,OAAO,CAAC8C,sBAAR;AACTM,MAAAA,QADS;AAETC,MAAAA,OAFS;AAGT,WAAKvC,eAAL,CAAqBuB,MAArB,CAA4B,MAAMe,QAAlC,CAHS,CAAX;;;AAMAP,MAAAA,IAAI,CAACE,GAAL,GAAWK,QAAX;;AAEAvC,MAAAA,MAAM,CAACmC,YAAP,CAAoBH,IAApB;AACD,KAZD;AAaD;AACDS,EAAAA,IAAI,CAACA,IAAD,EAAO;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAK,IAAI3B,OAAT,IAAoB2B,IAApB,EAA0B;AACxB,UAAIpD,cAAc,CAACqD,IAAf,CAAoBD,IAApB,EAA0B3B,OAA1B,CAAJ,EAAwC;AACtC,aAAKD,UAAL;AACEC,QAAAA,OADF;AAEE2B,QAAAA,IAAI,CAAC3B,OAAD,CAFN;AAGE,aAAKb,eAAL,CAAqBuB,MAArB,CAA4B,UAAUV,OAAtC,CAHF;;AAKD;AACF;AACF;AACD6B,EAAAA,OAAO,CAACC,GAAD,EAAM;AACX;AACA;AACA;AACA;AACA;AACA;AACA,QAAI5C,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAIJ,IAAI,GAAG,KAAKM,QAAhB;AACA,QAAIT,OAAO,GAAG,KAAKA,OAAnB;;AAEAO,IAAAA,MAAM,CAAC2C,OAAP,GAAiBC,GAAjB;;AAEA,QAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,UAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AACtB,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAACI,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnCjE,UAAAA,WAAW;AACTc,UAAAA,IADS;AAETH,UAAAA,OAFS;AAGTmD,UAAAA,GAAG,CAACG,CAAD,CAHM;AAIT/C,UAAAA,MAJS;AAKT,eAAKC,eAAL,CAAqBuB,MAArB,CAA6B,YAAWuB,CAAE,GAA1C,CALS,CAAX;;AAOD;AACF,OAVD,MAUO;AACLjE,QAAAA,WAAW;AACTc,QAAAA,IADS;AAETH,QAAAA,OAFS;AAGTmD,QAAAA,GAHS;AAIT5C,QAAAA,MAJS;AAKT,aAAKC,eAAL,CAAqBuB,MAArB,CAA6B,UAA7B,CALS,CAAX;;AAOD;AACF;AACF;;AAEDyB,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIlD,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAIP,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAI0D,UAAJ;;AAEA,QAAID,OAAO,IAAIL,KAAK,CAACC,OAAN,CAAcI,OAAd,CAAf,EAAuC;AACrC,WAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,OAAO,CAACF,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,YAAIK,SAAS,GAAGF,OAAO,CAACH,CAAD,CAAvB;AACA,YAAI,OAAOK,SAAP,KAAqB,QAAzB,EAAmC;AACjC,cAAIC,QAAQ,GAAG1E,QAAQ,CAAC0E,QAAT,CAAkBD,SAAlB,CAAf;AACA,cAAIC,QAAQ,KAAK,cAAjB,EAAiC;AAC/B,gBAAIC,WAAW,GAAG7E,WAAW,CAACgB,OAAD,EAAU2D,SAAV,CAA7B;AACA,gBAAIG,UAAU,GAAG5E,QAAQ,CAACc,OAAT,CAAiB6D,WAAjB,CAAjB;AACA,gBAAI7C,GAAG,GAAGzB,cAAc,CAAC0B,YAAf,CAA4B4C,WAA5B,CAAV;AACA,gBAAIE,YAAY,GAAG/C,GAAG,CAAC+C,YAAvB;AACA,gBAAIA,YAAJ,EAAkB;AAChB,kBAAIC,eAAe,GAAGnE,MAAM,CAAC+C,IAAP,CAAYmB,YAAZ,CAAtB;AACA,mBAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,eAAe,CAACT,MAApC,EAA4CU,CAAC,EAA7C,EAAiD;AAC/C,oBAAIC,cAAc,GAAGF,eAAe,CAACC,CAAD,CAApC;;AAEAP,gBAAAA,UAAU,GAAG1E,WAAW;AACtB8E,gBAAAA,UADsB;AAEtB5E,gBAAAA,QAAQ,CAAC6B,IAAT,CAAcmD,cAAd,EAA8B,YAA9B,CAFsB,CAAxB;;;AAKA,oBAAIR,UAAJ,EAAgB;AACdnD,kBAAAA,MAAM,CAAC4D,SAAP,CAAiBT,UAAjB;AACD;AACF;AACF;AACF,WApBD,MAoBO;AACLA,YAAAA,UAAU,GAAG1E,WAAW,CAACgB,OAAD,EAAU2D,SAAV,CAAxB;AACA,gBAAID,UAAJ,EAAgB;AACdnD,cAAAA,MAAM,CAAC4D,SAAP,CAAiBT,UAAjB;AACD,aAFD,MAEO;AACL,oBAAM,IAAI7B,KAAJ;AACJ,qCAAuB8B,SAAvB,GAAmC,SAAnC,GAA+C3D,OAA/C,GAAyD,GADrD,CAAN;;AAGD;AACF;AACF;AACF;AACF;AACF;;AAED;AACF;AACA;AACEoE,EAAAA,QAAQ,CAACnE,KAAD,EAAQ;AACd,SAAKoE,OAAL,CAAapE,KAAb;AACD;AACD;AACF;AACA;AACA;AACEoE,EAAAA,OAAO,CAACpE,KAAD,EAAQ;AACb,QAAImD,KAAK,CAACC,OAAN,CAAcpD,KAAd,CAAJ,EAA0B;AACxBA,MAAAA,KAAK,CAAC4C,OAAN,CAAc,KAAKwB,OAAnB,EAA4B,IAA5B;AACD,KAFD,MAEO;AACL,WAAK9D,MAAL,CAAY+D,SAAZ,CAAsBC,IAAtB,CAA2BrE,aAAa,CAAC,KAAKF,OAAN,EAAeC,KAAf,CAAxC;AACD;AACF;;AAED;AACF;AACA;AACEuE,EAAAA,SAAS,CAACvE,KAAD,EAAQ;AACf,SAAKM,MAAL,CAAYkE,UAAZ,GAAyBvE,aAAa,CAAC,KAAKF,OAAN,EAAeC,KAAf,CAAtC;AACD;;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEyE,EAAAA,QAAQ,CAACzE,KAAD,EAAQ;AACd,QAAIM,MAAM,GAAG,KAAKA,MAAlB;AACAA,IAAAA,MAAM,CAACM,EAAP,GAAYZ,KAAZ;AACD;;AAED;AACF;AACA;AACE0E,EAAAA,WAAW,CAAC1E,KAAD,EAAQ;AACjB,SAAK2E,SAAL,CAAe3E,KAAf;AACD;AACD;AACF;AACA;AACA;AACA;AACE2E,EAAAA,SAAS,CAAC3E,KAAD,EAAQ;AACf,QAAImD,KAAK,CAACC,OAAN,CAAcpD,KAAd,CAAJ,EAA0B;AACxBA,MAAAA,KAAK,CAAC4C,OAAN,CAAc,KAAK+B,SAAnB,EAA8B,IAA9B;AACD,KAFD,MAEO;AACL,WAAKrE,MAAL,CAAYsE,YAAZ,CAAyBN,IAAzB,CAA8BrE,aAAa,CAAC,KAAKF,OAAN,EAAeC,KAAf,CAA3C;AACD;AACF;;AAED6E,EAAAA,eAAe,CAAC7E,KAAD,EAAQ;AACrB,QAAIM,MAAM,GAAG,KAAKA,MAAlB;AACA,QAAIuE,eAAe;AACjBvE,IAAAA,MAAM,CAACuE,eAAP,KAA2BvE,MAAM,CAACuE,eAAP,GAAyB,EAApD,CADF;AAEA,QAAItE,eAAe,GAAG,KAAKA,eAAL,CAAqBuB,MAArB,CAA4B,kBAA5B,CAAtB;;AAEAlC,IAAAA,MAAM,CAAC+C,IAAP,CAAY3C,KAAZ,EAAmB4C,OAAnB,CAA2B,CAAAkC,aAAa,KAAI;AAC1C,UAAIC,SAAS,GAAIF,eAAe,CAACC,aAAD,CAAf,GAAiC,EAAlD;AACA,UAAIE,wBAAwB,GAAGzE,eAAe,CAACuB,MAAhB,CAAuBgD,aAAvB,CAA/B;;AAEA,UAAIG,YAAY,GAAGjF,KAAK,CAAC8E,aAAD,CAAxB;;AAEAlF,MAAAA,MAAM,CAAC+C,IAAP,CAAYsC,YAAZ,EAA0BrC,OAA1B,CAAkC,CAAAC,QAAQ,KAAI;AAC5C,YAAIqC,UAAU,GAAGD,YAAY,CAACpC,QAAD,CAA7B;;AAEA,YAAIP,IAAI,GAAG7C,OAAO,CAAC8C,sBAAR;AACTM,QAAAA,QADS;AAETqC,QAAAA,UAFS;AAGTF,QAAAA,wBAAwB,CAAClD,MAAzB,CAAgC,MAAMe,QAAtC,CAHS,CAAX;;;AAMAkC,QAAAA,SAAS,CAAClC,QAAD,CAAT,GAAsBP,IAAtB;AACD,OAVD;AAWD,KAjBD;AAkBD,GArVgB;;;AAwVnB,SAAS6C,mBAAT,CAA6B7E,MAA7B,EAAqCI,WAArC,EAAkDH,eAAlD,EAAmE;AACjE1B,EAAAA,EAAE,CAACyB,MAAD,EAAS,sBAAT,CAAF;AACAzB,EAAAA,EAAE,CAAC6B,WAAD,EAAc,2BAAd,CAAF;AACA7B,EAAAA,EAAE,CAACyB,MAAM,CAACE,QAAR,EAAkB,+BAAlB,CAAF;;AAEA,MAAI,CAACD,eAAL,EAAsB;AACpBA,IAAAA,eAAe,GAAG,IAAIhB,eAAJ,CAAoB,CAACe,MAAM,CAACE,QAAR,CAApB,CAAlB;AACD;;AAED,MAAI4E,YAAY,GAAG,IAAIhF,YAAJ,CAAiBE,MAAjB,EAAyBC,eAAzB,CAAnB;;AAEA,MAAI;AACF6E,IAAAA,YAAY,CAAC3E,IAAb,CAAkBC,WAAlB;AACD,GAFD,CAEE,OAAO2E,GAAP,EAAY;AACZ,UAAM7F,WAAW;AACf,gCAA4Be,eAA5B,GAA8C,KAA9C,GAAsD8E,GADvC;AAEfA,IAAAA,GAFe,CAAjB;;AAID;;AAED,SAAO/E,MAAP;AACD;;AAEDgF,MAAM,CAACC,OAAP,GAAiBJ,mBAAjB","sourcesContent":["\"use strict\";\n\nvar ok = require(\"assert\").ok;\nvar resolveFrom = require(\"resolve-from\").silent;\nvar nodePath = require(\"path\");\nvar types = require(\"./types\");\nvar taglibFS = require(\"../fs\");\nvar scanTagsDir = require(\"./scanTagsDir\");\nvar propertyHandlers = require(\"property-handlers\");\nvar jsonFileReader = require(\"./json-file-reader\");\nvar DependencyChain = require(\"./DependencyChain\");\nvar createError = require(\"raptor-util/createError\");\nvar loaders = require(\"./loaders\");\nvar markoModules = require(\"../../../modules\");\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveRelative(dirname, value) {\n  return value[0] === \".\" ? resolveFrom(dirname, value) : value;\n}\n\nfunction normalizeHook(dirname, value) {\n  if (typeof value === \"string\") {\n    value = resolveRelative(dirname, value);\n    return {\n      path: value,\n      get hook() {\n        return markoModules.require(value);\n      }\n    };\n  }\n  return { hook: value };\n}\n\n/**\n * We load a taglib definion using this class. Properties in the taglib\n * definition (which is just a JavaScript object with properties)\n * are mapped to handler methods in an instance of this type.\n *\n *\n * @param {Taglib} taglib The initially empty Taglib instance that we will populate\n * @param {String} path The file system path to the taglib that we are loading\n */\nclass TaglibLoader {\n  constructor(taglib, dependencyChain) {\n    ok(\n      dependencyChain instanceof DependencyChain,\n      '\"dependencyChain\" is not valid'\n    );\n\n    this.dependencyChain = dependencyChain;\n\n    this.taglib = taglib;\n    this.filePath = taglib.filePath;\n    this.dirname = taglib.dirname;\n  }\n\n  load(taglibProps) {\n    var taglib = this.taglib;\n\n    propertyHandlers(taglibProps, this, this.dependencyChain.toString());\n\n    if (!taglib.id) {\n      // Fixes #73\n      // See if there is a package.json in the same directory as the taglib file.\n      // If so, and if that package.json file has a \"name\" property then we will\n      // use the the name as the \"taglib ID\". The taglib ID is used to uniquely\n      // identity a taglib (ignoring version) and it is used to prevent the same\n      // taglib from being loaded multiple times.\n      //\n      // Using the file path as the taglib ID doesn't work so well since we might find\n      // the same taglib multiple times in the Node.js module search path with\n      // different paths.\n      var filePath = this.filePath;\n      var dirname = this.dirname;\n\n      var packageJsonPath = nodePath.join(dirname, \"package.json\");\n\n      try {\n        var pkg = jsonFileReader.readFileSync(packageJsonPath);\n        taglib.id = pkg.name;\n      } catch (e) {\n        /* ignore error */\n      }\n\n      if (!taglib.id) {\n        taglib.id = filePath;\n      }\n    }\n  }\n\n  _handleTag(tagName, value, dependencyChain) {\n    var tagProps;\n    var tagFilePath = this.filePath;\n\n    var tag;\n\n    if (typeof value === \"string\") {\n      tagFilePath = nodePath.resolve(this.dirname, value);\n\n      try {\n        taglibFS.curFS.statSync(tagFilePath);\n      } catch (_) {\n        throw new Error(\n          'Tag at path \"' +\n            tagFilePath +\n            '\" does not exist. (' +\n            dependencyChain +\n            \")\"\n        );\n      }\n\n      tag = new types.Tag(tagFilePath);\n\n      tagProps = jsonFileReader.readFileSync(tagFilePath);\n      dependencyChain = dependencyChain.append(tagFilePath);\n    } else {\n      tag = new types.Tag(this.filePath);\n      tagProps = value;\n    }\n\n    loaders.loadTagFromProps(tag, tagProps, dependencyChain);\n\n    if (tag.name === undefined) {\n      tag.name = tagName;\n    }\n\n    this.taglib.addTag(tag);\n  }\n\n  // We register a wildcard handler to handle \"@my-attr\" and \"<my-tag>\"\n  // properties (shorthand syntax)\n  \"*\"(name, value) {\n    var taglib = this.taglib;\n    var filePath = this.filePath;\n\n    if (name.startsWith(\"<\")) {\n      let tagName = name.slice(1, -1);\n      this._handleTag(tagName, value, this.dependencyChain.append(name));\n    } else if (name.startsWith(\"@\")) {\n      var attrKey = name.substring(1);\n\n      var attr = loaders.loadAttributeFromProps(\n        attrKey,\n        value,\n        this.dependencyChain.append(\"@\" + attrKey)\n      );\n\n      attr.filePath = filePath;\n      attr.key = attrKey;\n\n      taglib.addAttribute(attr);\n    } else {\n      return false;\n    }\n  }\n\n  attributes(value) {\n    // The value of the \"attributes\" property will be an object\n    // where each property maps to an attribute definition. Since these\n    // attributes are on the taglib they will be \"global\" attribute\n    // defintions.\n    //\n    // The property key will be the attribute name and the property value\n    // will be the attribute definition. Example:\n    // {\n    //     \"attributes\": {\n    //         \"foo\": \"string\",\n    //         \"bar\": \"expression\"\n    //     }\n    // }\n    var taglib = this.taglib;\n\n    Object.keys(value).forEach(attrName => {\n      var attrDef = value[attrName];\n\n      var attr = loaders.loadAttributeFromProps(\n        attrName,\n        attrDef,\n        this.dependencyChain.append(\"@\" + attrName)\n      );\n\n      attr.key = attrName;\n\n      taglib.addAttribute(attr);\n    });\n  }\n  tags(tags) {\n    // The value of the \"tags\" property will be an object\n    // where each property maps to an attribute definition. The property\n    // key will be the tag name and the property value\n    // will be the tag definition. Example:\n    // {\n    //     \"tags\": {\n    //         \"foo\": {\n    //             \"attributes\": { ... }\n    //         },\n    //         \"bar\": {\n    //             \"attributes\": { ... }\n    //         },\n    //     }\n    // }\n\n    for (var tagName in tags) {\n      if (hasOwnProperty.call(tags, tagName)) {\n        this._handleTag(\n          tagName,\n          tags[tagName],\n          this.dependencyChain.append(\"tags.\" + tagName)\n        );\n      }\n    }\n  }\n  tagsDir(dir) {\n    // The \"tags-dir\" property is used to supporting scanning\n    // of a directory to discover custom tags. Scanning a directory\n    // is a much simpler way for a developer to create custom tags.\n    // Only one tag is allowed per directory and the directory name\n    // corresponds to the tag name. We only search for directories\n    // one level deep.\n    var taglib = this.taglib;\n    var path = this.filePath;\n    var dirname = this.dirname;\n\n    taglib.tagsDir = dir;\n\n    if (dir != null) {\n      if (Array.isArray(dir)) {\n        for (var i = 0; i < dir.length; i++) {\n          scanTagsDir(\n            path,\n            dirname,\n            dir[i],\n            taglib,\n            this.dependencyChain.append(`tags-dir[${i}]`)\n          );\n        }\n      } else {\n        scanTagsDir(\n          path,\n          dirname,\n          dir,\n          taglib,\n          this.dependencyChain.append(`tags-dir`)\n        );\n      }\n    }\n  }\n\n  taglibImports(imports) {\n    // The \"taglib-imports\" property allows another taglib to be imported\n    // into this taglib so that the tags defined in the imported taglib\n    // will be part of this taglib.\n    //\n    // NOTE: If a taglib import refers to a package.json file then we read\n    //       the package.json file and automatically import *all* of the\n    //       taglibs from the installed modules found in the \"dependencies\"\n    //       section\n    var taglib = this.taglib;\n    var dirname = this.dirname;\n    var importPath;\n\n    if (imports && Array.isArray(imports)) {\n      for (var i = 0; i < imports.length; i++) {\n        var curImport = imports[i];\n        if (typeof curImport === \"string\") {\n          var basename = nodePath.basename(curImport);\n          if (basename === \"package.json\") {\n            var packagePath = resolveFrom(dirname, curImport);\n            var packageDir = nodePath.dirname(packagePath);\n            var pkg = jsonFileReader.readFileSync(packagePath);\n            var dependencies = pkg.dependencies;\n            if (dependencies) {\n              var dependencyNames = Object.keys(dependencies);\n              for (var j = 0; j < dependencyNames.length; j++) {\n                var dependencyName = dependencyNames[j];\n\n                importPath = resolveFrom(\n                  packageDir,\n                  nodePath.join(dependencyName, \"marko.json\")\n                );\n\n                if (importPath) {\n                  taglib.addImport(importPath);\n                }\n              }\n            }\n          } else {\n            importPath = resolveFrom(dirname, curImport);\n            if (importPath) {\n              taglib.addImport(importPath);\n            } else {\n              throw new Error(\n                \"Import not found: \" + curImport + \" (from \" + dirname + \")\"\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Deprecated\n   */\n  migrator(value) {\n    this.migrate(value);\n  }\n  /**\n   * A taglib can be mapped to module that is used\n   * migrate deprecated features to modern features across the entire template.\n   */\n  migrate(value) {\n    if (Array.isArray(value)) {\n      value.forEach(this.migrate, this);\n    } else {\n      this.taglib.migrators.push(normalizeHook(this.dirname, value));\n    }\n  }\n\n  /**\n   * Exposes a babel visitor to perform additional translations on the entire ast.\n   */\n  translate(value) {\n    this.taglib.translator = normalizeHook(this.dirname, value);\n  }\n\n  /**\n   * Allows an ID to be explicitly assigned to a taglib.\n   * The taglib ID is used to prevent the same taglib  (even if different versions)\n   * from being loaded multiple times.\n   *\n   * NOTE: Introduced as part of fix for #73\n   *\n   * @param  {String} value The taglib ID\n   */\n  taglibId(value) {\n    var taglib = this.taglib;\n    taglib.id = value;\n  }\n\n  /**\n   * Deprecated\n   */\n  transformer(value) {\n    this.transform(value);\n  }\n  /**\n   * If a custom tag has an associated transformer then the transformer\n   * will be called on the compile-time Node. The transformer can manipulate\n   * the AST using the DOM-like API to change how the code gets generated.\n   */\n  transform(value) {\n    if (Array.isArray(value)) {\n      value.forEach(this.transform, this);\n    } else {\n      this.taglib.transformers.push(normalizeHook(this.dirname, value));\n    }\n  }\n\n  attributeGroups(value) {\n    let taglib = this.taglib;\n    let attributeGroups =\n      taglib.attributeGroups || (taglib.attributeGroups = {});\n    let dependencyChain = this.dependencyChain.append(\"attribute-groups\");\n\n    Object.keys(value).forEach(attrGroupName => {\n      let attrGroup = (attributeGroups[attrGroupName] = {});\n      let attrGroupDependencyChain = dependencyChain.append(attrGroupName);\n\n      let rawAttrGroup = value[attrGroupName];\n\n      Object.keys(rawAttrGroup).forEach(attrName => {\n        var rawAttrDef = rawAttrGroup[attrName];\n\n        let attr = loaders.loadAttributeFromProps(\n          attrName,\n          rawAttrDef,\n          attrGroupDependencyChain.append(\"@\" + attrName)\n        );\n\n        attrGroup[attrName] = attr;\n      });\n    });\n  }\n}\n\nfunction loadTaglibFromProps(taglib, taglibProps, dependencyChain) {\n  ok(taglib, '\"taglib\" is required');\n  ok(taglibProps, '\"taglibProps\" is required');\n  ok(taglib.filePath, '\"taglib.filePath\" is required');\n\n  if (!dependencyChain) {\n    dependencyChain = new DependencyChain([taglib.filePath]);\n  }\n\n  var taglibLoader = new TaglibLoader(taglib, dependencyChain);\n\n  try {\n    taglibLoader.load(taglibProps);\n  } catch (err) {\n    throw createError(\n      \"Unable to load taglib (\" + dependencyChain + \"): \" + err,\n      err\n    );\n  }\n\n  return taglib;\n}\n\nmodule.exports = loadTaglibFromProps;\n"],"file":"loadTaglibFromProps.js"}