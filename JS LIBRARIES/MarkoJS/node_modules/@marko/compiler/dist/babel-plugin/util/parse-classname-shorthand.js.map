{"version":3,"sources":["../../../src/babel-plugin/util/parse-classname-shorthand.js"],"names":["file","shorthands","attributes","classAttr","find","name","classParts","map","rawParts","nodes","part","expression","pos","t","stringLiteral","text","endPos","length","reduce","a","b","binaryExpression","shorthandNode","every","node","isStringLiteral","combinedStartPos","lastParts","combinedEndPos","value","join","arrayExpression","isArrayExpression","elements","push","markoAttribute"],"mappings":"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","sourcesContent":["import { withLoc, parseExpression } from \"@marko/babel-utils\";\nimport * as t from \"../../babel-types\";\n\nexport default (file, shorthands, attributes) => {\n  if (!shorthands) {\n    return attributes;\n  }\n\n  const classAttr = attributes.find(({ name }) => name === \"class\");\n  const classParts = shorthands.map(({ rawParts }) => {\n    const nodes = rawParts.map(part =>\n      part.expression\n        ? parseExpression(file, part.expression, part.pos)\n        : withLoc(file, t.stringLiteral(part.text), part.pos, part.endPos)\n    );\n\n    if (nodes.length === 1) {\n      return nodes[0];\n    }\n\n    return nodes.reduce((a, b) => t.binaryExpression(\"+\", a, b));\n  });\n\n  let shorthandNode;\n  if (classParts.length === 1) {\n    shorthandNode = classParts[0];\n  } else if (classParts.every(node => t.isStringLiteral(node))) {\n    const combinedStartPos = shorthands[0].rawParts[0].pos;\n    const lastParts = shorthands[shorthands.length - 1].rawParts;\n    const combinedEndPos = lastParts[lastParts.length - 1].endPos;\n    shorthandNode = withLoc(\n      file,\n      t.stringLiteral(classParts.map(node => node.value).join(\" \")),\n      combinedStartPos,\n      combinedEndPos\n    );\n  } else {\n    shorthandNode = t.arrayExpression(classParts);\n  }\n\n  if (classAttr) {\n    if (t.isArrayExpression(classAttr.value)) {\n      if (t.isArrayExpression(shorthandNode)) {\n        classAttr.value.elements.push(...shorthandNode.elements);\n      } else {\n        classAttr.value.elements.push(shorthandNode);\n      }\n    } else if (\n      t.isStringLiteral(classAttr.value) &&\n      t.isStringLiteral(shorthandNode)\n    ) {\n      classAttr.value.value = `${shorthandNode.value} ${classAttr.value.value}`;\n    } else if (t.isArrayExpression(shorthandNode)) {\n      shorthandNode.elements.push(classAttr.value);\n      classAttr.value = shorthandNode;\n    } else {\n      classAttr.value = t.arrayExpression([shorthandNode, classAttr.value]);\n    }\n  } else {\n    attributes.push(t.markoAttribute(\"class\", shorthandNode));\n  }\n\n  return attributes;\n};\n"],"file":"parse-classname-shorthand.js"}