{"version":3,"sources":["../src/imports.js"],"names":["IS_POSIX","path","sep","IMPORTS_KEY","Symbol","FS_START","exec","process","cwd","toPosix","v","result","i","length","c","resolveRelativePath","file","request","startsWith","remapProductionMarkoBuild","filename","opts","relativePath","relative","dirname","replace","importDefault","nameHint","imports","getImports","importDeclaration","get","set","pushContainer","t","stringLiteral","specifiers","specifier","find","isImportDefaultSpecifier","identifier","scope","generateUidIdentifier","importDefaultSpecifier","node","local","name","importNamed","isImportSpecifier","imported","importSpecifier","metadata","marko","Map","markoOpts","optimize"],"mappings":"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","sourcesContent":["import path from \"path\";\nimport { types as t } from \"@marko/compiler\";\n\nconst IS_POSIX = path.sep === \"/\";\nconst IMPORTS_KEY = Symbol();\nconst FS_START = IS_POSIX ? path.sep : /^(.*?:)/.exec(process.cwd())[1];\n\nconst toPosix = IS_POSIX\n  ? v => v\n  : v => {\n      let result = \"\";\n      for (let i = v.length; i--; ) {\n        const c = v[i];\n        result = (c === path.sep ? \"/\" : c) + result;\n      }\n\n      return result;\n    };\n\nexport function resolveRelativePath(file, request) {\n  if (!request.startsWith(FS_START)) {\n    return remapProductionMarkoBuild(file, request);\n  }\n\n  const { filename } = file.opts;\n  let relativePath = toPosix(path.relative(path.dirname(filename), request));\n  if (relativePath[0] !== \".\") relativePath = `./${relativePath}`;\n  return remapProductionMarkoBuild(\n    file,\n    relativePath.replace(/^(?:\\.{1,2}\\/)+node_modules\\//, \"\")\n  );\n}\n\nexport function importDefault(file, request, nameHint) {\n  const imports = getImports(file);\n  request = resolveRelativePath(file, request);\n  let importDeclaration = imports.get(request);\n\n  if (!importDeclaration) {\n    imports.set(\n      request,\n      (importDeclaration = file.path.pushContainer(\n        \"body\",\n        t.importDeclaration([], t.stringLiteral(request))\n      )[0])\n    );\n  }\n\n  if (!nameHint) {\n    return;\n  }\n\n  const specifiers = importDeclaration.get(\"specifiers\");\n  const specifier = specifiers.find(specifier =>\n    specifier.isImportDefaultSpecifier()\n  );\n\n  if (!specifier) {\n    const identifier = file.scope.generateUidIdentifier(nameHint);\n    importDeclaration.pushContainer(\n      \"specifiers\",\n      t.importDefaultSpecifier(identifier)\n    );\n    return identifier;\n  }\n\n  return t.identifier(specifier.node.local.name);\n}\n\nexport function importNamed(file, request, name, nameHint = name) {\n  request = resolveRelativePath(file, request);\n  const imports = getImports(file);\n  let importDeclaration = imports.get(request);\n\n  if (!importDeclaration) {\n    imports.set(\n      request,\n      (importDeclaration = file.path.pushContainer(\n        \"body\",\n        t.importDeclaration([], t.stringLiteral(request))\n      )[0])\n    );\n  }\n\n  const specifiers = importDeclaration.get(\"specifiers\");\n  const specifier = specifiers.find(\n    specifier =>\n      specifier.isImportSpecifier() && specifier.node.imported.name === name\n  );\n\n  if (!specifier) {\n    const identifier = file.scope.generateUidIdentifier(nameHint);\n    importDeclaration.pushContainer(\n      \"specifiers\",\n      t.importSpecifier(identifier, t.identifier(name))\n    );\n    return identifier;\n  }\n\n  return t.identifier(specifier.node.local.name);\n}\n\nfunction getImports(file) {\n  let imports = file.metadata.marko[IMPORTS_KEY];\n\n  if (!imports) {\n    imports = file.metadata.marko[IMPORTS_KEY] = new Map();\n  }\n\n  return imports;\n}\n\nfunction remapProductionMarkoBuild(file, request) {\n  if (!file.markoOpts.optimize) return request;\n  return request.replace(/(^|\\/)marko\\/src\\//, \"$1marko/dist/\");\n}\n"],"file":"imports.js"}